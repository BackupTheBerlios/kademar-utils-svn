#!/bin/bash
# /etc/init.d/xsession: start or stop the X display manager on Live-CD
# Script originally stolen from the kdm & xdm package
#
# description: Start de Xsession
#

# 8-9-09 - Added support to cmdline "nox"

# [ "`arch`" = "x86_64" ] && arch="-x86_64"

#export PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin"

nox=false

tryNvidiaLegacy(){
  if [ -n "$1" ]; then
    . /etc/kademar/functions
    set_environment_variables
    
    #hack if started like root, to not have problems as user
    sudo chown $user:users $HOME/.dbus -R 2>/dev/null
    sudo chown $user:users $HOME/.dbus 2>/dev/null
    sudo chown $user:users $HOME/.cache -R 2>/dev/null
    sudo chown $user:users $HOME/.cache 2>/dev/null

    sudo rm -fr /home/$user/.Xaut*
    rm -fr $HOME/.xinitrc
    cp -a /usr/share/desktop-selector/xinit/$1 $HOME/.xinitrc
    sudo chmod 777 $HOME/.xinitrc
    startx
  
  #try to install Nvidia Legacy if failed startx
    if [ "$?" != "0" -a -n "$(lspci | grep -i nvidia)" ]; then
      if [ -n "$(LANG=C modprobe nvidia 2>&1 | grep -i "no such device")" -o -n "$(LANG=C modprobe nvidia 2>&1 | grep -i "not found")" ]; then
        if [ -z "`grep nvidiaLegacyDriver=true /etc/desktop-selector/desktop-selector.ini`"  ]; then
          echo "Installing NVIDIA Legacy drivers"
	  sudo sh /usr/share/desktop-selector/scripts/nvidia-legacy-installer-offline.sh
	  sudo chmod 777 /etc/desktop-selector/desktop-selector.ini
	  echo nvidiaLegacyDriver=true >> /etc/desktop-selector/desktop-selector.ini
	  startx
	fi
      fi
    fi
  fi
}



#Detect No X cmdline
for i in `cat /proc/cmdline`
do
    [ "$i" = "nox" ] &&  nox="true"
    [ "$i" = "server" ] &&  nox="true"
    
done

# Check boot commandline for specified option,
# echo last found argument, or return false.
# getbootparam(){
#  local result="" i CMDLINE
#  read CMDLINE < /proc/cmdline
#  for i in $CMDLINE; do
#   case "$i" in $1=*) result="${i#*=}" ;; esac
#  done
#  [ -n "$result" ] || return 1
#  echo "$result"
#  return 0
# }

# Start function
# start(){
#remove nouveau&radeon module if requested
kernel=`uname -r`
[ -e "/usr/lib/modules/$kernel/kernel/drivers/gpu/drm/nouveau" ] && sudo mv /usr/lib/modules/$kernel/kernel/drivers/gpu/drm/nouveau /tmp 2>/dev/null
[ -e "/usr/lib/modules/$kernel/kernel/drivers/gpu/drm/radeon" ] && sudo mv /usr/lib/modules/$kernel/kernel/drivers/gpu/drm/radeon /tmp 2>/dev/null


 # Read default from /etc/default (Debian) and/or /etc/sysconfig (Knoppix)
. /etc/kademar/config-livecd
 GROUP="users"
 
 XMODULE=""
xsesson_commands_file=/var/tmp/xsession-commands

user_file=/var/tmp/user

# XSERVER=Xorg
XCONFIG="/etc/X11/xorg.conf"

xserver_file=/var/tmp/xserver
sudo touch $xserver_file
[ -e $xserver_file ] && . $xserver_file

#full acces for desktop-selector
sudo chmod 777 $xserver_file

KVER="`uname -r`"

#  [ -n "$DESKTOP" ] || DESKTOP="$(getbootparam desktop)"
  
#   oldtime="$(date +'%s')"
  # Older compiz versions start gtk-window-decorator only if GNOME_DESKTOP_SESSION_ID is set.
#   sessreg -a -l :0 -x /etc/X11/xdm/Xservers $user

#remove previous file to avoid errors
rm -f /home/$user/.xsession-errors

#remove files if exists on persistent mode and can make it fail
sudo rm -f /etc/X11/xorg.conf.d/10-driver.conf
sudo rm -f /etc/X11/xorg.conf.d/10-monitor.conf

#Put a default one
sudo cp -a /usr/share/desktop-selector/xorg.conf.d/10-monitor.conf /etc/X11/xorg.conf.d

#Get tty num to have a polkit/loginctl active=yes session
#
# tty_num=$(fgconsole)
#tty_num=$1

if [ "$nox" = "false" ]; then
    while true; do

	if [ "$desktop_selector" != "no" ]; then
          . /etc/kademar/functions
          set_environment_variables
	  sudo XINITRC=/usr/share/desktop-selector/xinit/desktop-selector xinit -- /usr/bin/X -nolisten tcp  -noreset $tty_num
	fi

	[ -e $xserver_file ] && . $xserver_file
	
	#configure language and system with desktop-selector variables
	if [ -n "$LANG" ]; then
	  echo "Configuring Language"
	  sudo sh /usr/share/desktop-selector/scripts/locale_configurator $LANG
	fi

	# Restore Nouveau driver if requested
	if [ -z "`grep nvidiaDriver=true /etc/desktop-selector/desktop-selector.ini`" -a -z "`grep nvidiaLegacyDriver=true /etc/desktop-selector/desktop-selector.ini`" ]; then
	    kernel=`ls /usr/lib/modules/ --ignore=extramodules*`
	    [ -e /tmp/nouveau ] && sudo mv /tmp/nouveau /usr/lib/modules/$kernel/kernel/drivers/gpu/drm
	    if [ -n "$(lspci | grep -i [vV][Gg][Aa] | sed s.'VGA compatible controller: '..g | sed s,'[0-9][0-9]:[0-9][0-9].[0-9]',,g | cut -d'(' -f1 | grep -i " [Nn][Vv][Ii][Dd][Ii][Aa] ")" ]; then
            sudo modprobe nouveau
	    fi
	fi
	
	if [ -z "`grep atiDriver=true /etc/desktop-selector/desktop-selector.ini`" ]; then
	    kernel=`ls /usr/lib/modules/ --ignore=extramodules*`
	    [ -e /tmp/radeon ] && sudo mv /tmp/radeon /usr/lib/modules/$kernel/kernel/drivers/gpu/drm
# 	    If detected ati, load it. If not can have problems
	    if [ -n "$(lspci | grep -i [vV][Gg][Aa] | sed s.'VGA compatible controller: '..g | sed s,'[0-9][0-9]:[0-9][0-9].[0-9]',,g | cut -d'(' -f1 | grep -i " [Aa][Tt][Ii] ")" ]; then
            sudo modprobe radeon
	    fi
	fi

	 if [ "$DESKTOP" != "none" ]; then
		
		sudo rm -f $xsesson_commands_file
		sudo touch $xsesson_commands_file
		sudo chown $user:$GROUP $xsesson_commands_file
		
# 		[ -e $user_file ] && . $user_file
	
	
		tryNvidiaLegacy "$DESKTOP"

	  fi
	
	#   sessreg -d -l :0 -x /etc/X11/xdm/Xservers $user
	  # Temporary workaround for missing KDE/Gnome shutdown button
	  if tail -1 /home/"$user"/.xsession-errors 2>/dev/null | egrep -q -e '(startkde: Done|^gnome)'; then
# 	   sudo /sbin/init 0
             sudo systemctl poweroff
	  fi
	#   newtime="$(date +'%s')"
	#   if [ "$((newtime - oldtime))" -lt 30 ]; then
	   # If X stays up no longer than 30 secs, it crashed, probably.
	#    [ "$RC" = "0" ] || continue
	#    tail /var/log/Xorg.0.log | egrep -q "(^Fatal server error:|[Ss]egmentation)" && continue
	#   fi
	
	 if [ "$RC" = "0" ]; then
	  echo "${BLUE}$miss_acabat_sense${NORMAL}"
	  		XSESSION_COMMAND=$(cat $xsesson_commands_file)
		#	NEXT_RUNLEVEL=0
		
			[ "$DESKTOP" = "icewm" ] && NEXT_RUNLEVEL=0
	
			if [ -n "$XSESSION_COMMAND" ]; then
				case "$XSESSION_COMMAND" in
				shutdown*halt*)
					NEXT_RUNLEVEL="systemctl poweroff"
				;;
				shutdown*reboot*)
					NEXT_RUNLEVEL=reboot
				;;
# 				*)
# 					/etc/rc.d/kademar-livecd-xsession restart
# 				;;
				esac
			fi
			sudo $NEXT_RUNLEVEL
#	  return "$RC"
# 	 else
# 	 	error_msg
	 fi
    done
fi
#}

# 
# stop(){
#  killall startx >/dev/null 2>&1
# }
# 
# error_msg(){
#  # Shutdown or failure messages
#  case "$LANG" in
#  *)
# #   ERRORMSG="[1mThe graphical subsystem could not be startet\nor terminated unexpectedly.\nMaybe your graphics adapter or monitor are not auto-configurable.\n\nPlease try to reboot and give some of the Knoppix-Cheatcodes\nat the initial boot:-prompt, which match your graphics adapter.\nExamples:\n   kademar xmodule=radeon (or ati, nv, cirrus, ...)\n   kademar xmodule=fbdev\n   kademar xmodule=vesa\n"
#  esac
# #  echo -e "$ERRORMSG"
#   echo -e "Error iniciando el sistema gr√°fico. Entre 'halt' para apagar el ordenador y visite la p√°gina web $web para m√°s informaci√≥n."
# }
# 
# ### MAIN
# 
# case "$1" in
#  start)
# 	if [ -z "$nox" ]; then
# 		start
# 	else
# 		#Configure some services - taken of kademarcenter
# 		sh /usr/share/kademar/scripts/services_nox
# 	fi
#  ;;
# 
#  stop)  stop  ;;
#  restart) stop; sleep 4; start;;
#  *)
# 	echo "command not recognized $1"
#  ;;
# esac
# 
# exit $?
