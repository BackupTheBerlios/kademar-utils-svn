#!/bin/bash

#################################################
# Script per instalar el GRUB com a boot-loader #
#         -------------------------             #
#    Parcialment extret dels Burnix-Scripts     #
#    Preparat per la kademar 5.0 - 04 Mai 2008  #
#    Preparat per la kademar 4.2 - 14 Mai 2005  #
#    Preparat per la kademar 4.0 - 3 Nov 2005   #
#    Llicenciat Sota GNU/GPL 2.0 o Superiors    #
#################################################

#MODE TO CALL IT
# install-bootloader
. /tmp/instalador-environment

#Assignem el parametre 1 al dispositiu
DEV="$mbr_dev"
#Assignem una variable amb el dispositiu sense numero
DEV_SENSE_NUMERO=${DEV%[1-9]}



#####
##   FUNCTIONS
#####

CMDLINE=`cat /proc/cmdline`

# Simple shell grep
stringinfile(){
case "$(cat $2)" in *$1*) return 0;; esac
return 1
}

# same for strings
stringinstring(){
case "$2" in *$1*) return 0;; esac
return 1
}

# Reread boot command line; echo last parameter's argument or return false.
getbootparam(){
stringinstring " $1=" "$CMDLINE" || return 1
result="${CMDLINE##*$1=}"
result="${result%%[     ]*}"
echo "$result"
return 0
}

# Check boot commandline for specified option
checkbootparam(){
stringinstring " $1" "$CMDLINE"
return "$?"
}
#####
##   END FUNCITIONS
#####


if [ -n "`which burg-install 2>/dev/null`" ]; then
    grub=burg
    echo "Burg Found"
else
    grub=grub
    echo "Grub Found"
fi

#Assignem el parametre 2 al desti
# DESTI="$3"
#Si no n'hem assignat cap, assignem el per defecte en la kademar 4.0
# [ -z "$DESTI" -o "$DESTI" = "0" ] && DESTI="/instalador/desti"



# Si el initrd esta marcat per crear-lo
if [ "$make_initrd" = "yes" ]; then
    #Creem l'initrd per el kernel
    chroot $DESTI mkinitcpio -p linux
fi




# #Versiï¿œ del Kernel
# if [ -z "$cadi" ]; then
#      kernel="`uname -r`"
# else
#      cd $DESTI/boot
#      kernel=$(for i in `ls -1 vmlinuz* | sed s/vmlinuz-//g`; do echo $i; break ; done) 
# fi
# 
# #Borrem una possible carpeta grub anterior, i la tornem a crear
rm -fr $DESTI/boot/$grub 
mkdir -p $DESTI/boot/$grub
# 
# #Suport a gfxboot-grub 
# cp /boot/grub/message.* $DESTI/boot/grub 2>/dev/null
# 
# #Copiem propiament el grub en la seva carpeta
# [ -e $DESTI/lib/grub/i386-pc/ ] && cp $DESTI/lib/grub/i386-pc/* $DESTI/boot/grub/
# [ -e $DESTI/usr/lib/grub/i386-pc/ ] && cp $DESTI/usr/lib/grub/i386-pc/* $DESTI/boot/grub/
# [ -e $DESTI/lib/grub/x86_64-pc/ ] && cp $DESTI/lib/grub/x86_64-pc/* $DESTI/boot/grub/
# [ -e $DESTI/usr/lib/grub/x86_64-pc/ ] && cp $DESTI/usr/lib/grub/x86_64-pc/* $DESTI/boot/grub/
#   
# 
#Borrem l'arxiu de configuraciï¿œ del grub en cas de que existeixi
[ -e $DESTI/boot/$grub/menu.lst ] && rm -f $DESTI/boot/$grub/menu.lst
[ -e $DESTI/boot/$grub/device.map ] && rm -f $DESTI/boot/$grub/device.map

#Borrem el mtab
rm -f  $DESTI/etc/mtab
#I creem una entrada estandar per l'instalador
echo "/dev/$DEV / $fsparticioarrel defaults 0 0" > $DESTI/etc/mtab


# Search for grub version
# if [ -z "`dpkg -l | grep -i grub-pc | grep -i ii`" ]; then
#grub 1
#     echo *** Grub Version 1 ***
#     grubver=1
# else
# grub2
#     echo *** Grub Version 2 ***
#     grubver=2
# fi

#Creem el Device.map amb la informacio dels dispositius
# if [ -n "`which grub-mkdevicemap`" ]; then
# grub2 normally  and  grub 1 tunned installations
/usr/share/kademar/utils/instalador/scripts/mkdevicemap --no-floppy --device-map=$DESTI/boot/$grub/device.map
# else
#     echo quit \
# grub 1
#       | grub --batch --no-floppy --device-map=$DESTI/boot/grub/device.map
# fi


#chroot $DESTI sed -i "s~# kopt.*~# kopt=root=$DESTI_ROOT $DEF_BOOTPARMS~g" /boot/grub/menu.lst 

#TODO find a way to not have to do that twice
#chroot $DESTI update-grub -y  

#Si no s'ha definit que NO volem mbr, instala'l
if [ "$mbr" != "no" ]; then
    #Si el mbr es "automatic", fem que es busqui la vida, sino el sobreecrivim
    if [ "$mbr" = "auto" ]; then
        MBR_SENSE_NUMERO=`cat $DESTI/boot/$grub/device.map | grep '(hd0)' | sed s:/dev/::g | awk ' { print $2 } '`
    else
        MBR_SENSE_NUMERO=`echo $mbr | awk ' { print $1 } ' | sed s:/dev/::g`
    fi

#     #support to new grubs
#     if [ "$grubver" = 2 ]; then
#         lba=""
#     else
#         lba="--force-lba"
#     fi
    #borrem el device.map
    rm -fr $DESTI/boot/$grub 
    
    echo "$grub-install --root-directory=$DESTI /dev/$MBR_SENSE_NUMERO"
    $grub-install --root-directory=$DESTI /dev/$MBR_SENSE_NUMERO

    if [ "$?" != 0 ]; then
      echo "Installing again grub, seems that was an error"
      
      echo "$grub-install --root-directory=$DESTI --target=i386-pc /dev/$MBR_SENSE_NUMERO"
      $grub-install --root-directory=$DESTI --target=i386-pc /dev/$MBR_SENSE_NUMERO

    fi

#     echo "$grub-install --root-directory=$DESTI /dev/$MBR_SENSE_NUMERO"

fi

# DEPRECATED
# #be sure link exists
# rm -fr "$DESTI/boot/$grub/locale"
# ln -s "/usr/share/locale" "$DESTI/boot/$grub/locale"


####
# CONFIG CREATION
###

resol=`xrandr -q 2>/dev/null  | grep -i \* | awk ' { print $1 } '`
[ -z "$resol" ] && resol="1024x768"
var32="x32"

#Support for resume/suspend/hibernate partition (now uses swap partition)
#Grep UUID information
uidsw=`blkid $particioswap -o value -s UUID`

# If had UUID information, and initrd it's created, use it
if [ -n "$uidsw" -a "$make_initrd" = "yes" ]; then
    particioswap="UUID=$uidsw"
fi

[ -n "$particioswap" ] && resume="resume=$particioswap"

#support to other configurations
moreoptions=""
for i in noapm nomodeset noacpi noapic nosmp apm nomce mce nopat nopae startjoomla startcsicappgroup1 startcsicappgroup2 startcsicappgroup3 startcsicappgroup4 nox adriane screenread orca
do
    a=$(getbootparam $i)  #vga=791 de com ha engegat
    [ -n "$a" ] && moreoptions="$moreoptions $a"
done


#Define standard User params
user_params="splash=silent,fadein,fadeout,theme:kademar console=/dev/tty1 fastboot init=/bin/systmd $resume $moreoptions"


particions_arrancables=/tmp/particions-arrancables
#Si hi ha particions arrancables que no siguin la particio arrel
if [ -n "`grep -v $particioarrel $particions_arrancables`" ]; then
    timeout=10
    grub_hidden_menu="#GRUB_HIDDEN_TIMEOUT=5
#GRUB_HIDDEN_TIMEOUT_QUIET=true"
else
    timeout=1
    grub_hidden_menu="GRUB_HIDDEN_TIMEOUT=5
GRUB_HIDDEN_TIMEOUT_QUIET=true"
fi


distro=Kademar
[ -e /etc/kademar/config-livecd.heliox ] && distro=Heliox


#Background support
grub_background='#GRUB_BACKGROUND="/path/to/wallpaper"'
[ -e /boot/heliox-black.png ] && grub_background='GRUB_BACKGROUND="/boot/heliox-black.png"'
[ -e /boot/heliox.png ] && grub_background='GRUB_BACKGROUND="/boot/heliox.png"'
[ -e /boot/kademar-black.png ] && grub_background='GRUB_BACKGROUND="/boot/kademar-black.png"'
[ -e /boot/kademar.png ] && grub_background='GRUB_BACKGROUND="/boot/kademar.png"'

### TODO si la particion /boot esta separada, el path debe ser /kademar.png

grub_color='GRUB_COLOR_NORMAL="light-gray/black"
GRUB_COLOR_HIGHLIGHT="light-red/black"'

[ "$distro" = "Heliox" ] && grub_color='GRUB_COLOR_NORMAL="brown/black"
GRUB_COLOR_HIGHLIGHT="yellow/black"'

grub_default=0
[ -e $DESTI/usr/share/config/kdm/kdmrc ] && grub_default=saved

#Config grub2
cat > $DESTI/etc/default/$grub << EOF
GRUB_DEFAULT=$grub_default
GRUB_TIMEOUT=$timeout
GRUB_DISTRIBUTOR="$distro Linux"
GRUB_CMDLINE_LINUX_DEFAULT="quiet add_efi_memmap"
GRUB_CMDLINE_LINUX="$user_params"

# Preload both GPT and MBR modules so that they are not missed
GRUB_PRELOAD_MODULES="part_gpt part_msdos"

# Uncomment to enable Hidden Menu, and optionally hide the timeout count
$grub_hidden_menu

# Uncomment to use basic console
GRUB_TERMINAL_INPUT=console

# Uncomment to disable graphical terminal
#GRUB_TERMINAL_OUTPUT=console

# The resolution used on graphical terminal
# note that you can use only modes which your graphic card supports via VBE
# you can see them in real GRUB with the command \`vbeinfo\`
GRUB_GFXMODE=$resol

# Uncomment to allow the kernel use the same resolution used by grub
GRUB_GFXPAYLOAD_LINUX=keep

# Uncomment if you want GRUB to pass to the Linux kernel the old parameter 
# format "root=/dev/xxx" instead of "root=/dev/disk/by-uuid/xxx" 
#GRUB_DISABLE_LINUX_UUID=true

# Uncomment to disable generation of recovery mode menu entries
GRUB_DISABLE_RECOVERY=true

# Uncomment and set to the desired menu colors.  Used by normal and wallpaper 
# modes only.  Entries specified as foreground/background.
$grub_color

# Uncomment one of them for the gfx desired, a image background or a gfxtheme
$grub_background
#GRUB_THEME="/path/to/gfxtheme"

# Uncomment to get a beep at GRUB start
#GRUB_INIT_TUNE="480 440 1"

EOF

####
# END CONFIG CREATION
####




. $DESTI/etc/rc.conf

# chroot $DESTI LANG=$LANGUAGE $grub-mkconfig -o /boot/$grub/$grub.cfg

. /etc/kademar/functions
set_environment_variables $DESTI
chroot $DESTI $grub-mkconfig -o /boot/$grub/$grub.cfg


#Fix problem with catalan locales on grub
sed s."S'està c"."C".g -i $DESTI/boot/$grub/$grub.cfg


#Delete generic entry to install GRUB/BURG
rm -f $DESTI/etc/mtab
#Restore original entry
ln -s /proc/mounts $DESTI/etc/mtab