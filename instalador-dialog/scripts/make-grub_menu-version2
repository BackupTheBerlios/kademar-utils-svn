#!/bin/bash

#
# Script to make grub menu - grub version 2
#
# Adonay Sanz Alsina - 24 March 2010 - GPL 2.0 or higher
#


. /tmp/instalador-environment

CMDLINE=`cat /proc/cmdline`

#####
##   FUNCTIONS
#####

# Simple shell grep
stringinfile(){
case "$(cat $2)" in *$1*) return 0;; esac
return 1
}

# same for strings
stringinstring(){
case "$2" in *$1*) return 0;; esac
return 1
}

# Reread boot command line; echo last parameter's argument or return false.
getbootparam(){
stringinstring " $1=" "$CMDLINE" || return 1
result="${CMDLINE##*$1=}"
result="${result%%[     ]*}"
echo "$result"
return 0
}

# Check boot commandline for specified option
checkbootparam(){
stringinstring " $1" "$CMDLINE"
return "$?"
}
#####
##   END FUNCITIONS
#####








#be sure link exists
rm -f "$DESTI/boot/grub/locale"
ln -s "/usr/share/locale" "$DESTI/boot/grub/locale"






#BEGIN REAL MENU.LST CREATION WORK
# vga=$(getbootparam vga)  #vga=791 de com ha engegat
# [ -n "$vga" ] && vga="vga=$vga"
resol=`xrandr -q 2>/dev/null  | grep -i \* | awk ' { print $1 } '`
[ -z "$resol" ] && resol="1024x768"
var32="x32"

#Support for resume/suspend/hibernate partition (now uses swap partition)
#Grep UUID information
uidsw=`vol_id $particioswap 2>/dev/null| grep "ID_FS_UUID=" | cut -d= -f2`

# If had UUID information, and initrd it's created, use it
if [ -n "$uidsw" -a "$make_initrd" = "yes" ]; then
    particioswap="UUID=$uidsw"
fi

[ -n "$particioswap" ] && resume="resume=$particioswap"

#support to other configurations
moreoptions=""
for i in noapm noacpi noapic nosmp apm nomce mce nopat nopae startjoomla startcsicappgroup1 startcsicappgroup2 startcsicappgroup3 startcsicappgroup4 nox adriane screenread orca
do
    a=$(getbootparam $i)  #vga=791 de com ha engegat
    [ -n "$a" ] && moreoptions="$moreoptions $a"
done


#Define standard User params
user_params="splash=silent quiet CONSOLE=/dev/tty1 ro apm=power-off $resume $moreoptions"


particions_arrancables=/tmp/particions-arrancables
#Si hi ha particions arrancables que no siguin la particio arrel
if [ -n "`grep -v $particioarrel $particions_arrancables`" ]; then
    timeout=10
else
    timeout=1
fi

#Config grub2
cat > $DESTI/etc/default/grub << EOF
# This file is sourced by update-grub, and its variables are propagated
# to its children in /etc/grub.d/
GRUB_DEFAULT=0
GRUB_TIMEOUT=$timeout
GRUB_DISTRIBUTOR=\`lsb_release -i -s 2> /dev/null || echo Debian\`
GRUB_CMDLINE_LINUX="$user_params"
GRUB_CMDLINE_LINUX_DEFAULT="quiet"

# Uncomment to disable graphical terminal (grub-pc only)
#GRUB_TERMINAL=console

# The resolution used on graphical terminal
# note that you can use only modes which your graphic card supports via VBE
# you can see them in real GRUB with the command \`vbeinfo\`
#GRUB_GFXMODE=$resol$var32
#GRUB_GFXPAYLOAD_LINUX=keep

# Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux
#GRUB_DISABLE_LINUX_UUID=true

# Uncomment to disable generation of recovery mode menu entries
#GRUB_DISABLE_LINUX_RECOVERY="true"

# Uncomment to get a beep at grub start
#GRUB_INIT_TUNE="480 440 1"
EOF




chroot "$DESTI" grub-mkconfig -o /boot/grub/grub.cfg

