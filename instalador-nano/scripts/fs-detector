#!/bin/bash

#
# Adonay Sanz Alsina
# GNU/GPL 2.0 or higher
# Modified 24-03-08
# 

# Script que informa dels discs i / o particions d'aquests - Detectador de particions

# MODE TO CALL IT
#  fs-detector [1 or 0] [path to /mnt] [path to /sys/block/  (NECESSÀRIA LA ULTIMA BARRA)]


#########################
# INITALIZING VARIABLES #
#########################


dispositius_trobats=""


# echo "${YELLOW}Detecting Filesystems${NORMAL}"

#Definició inicial de variables

sys_block_path="/sys/block/"

#segon parametre passat = ruta al /sys/block/  (NECESSÀRIA LA ULTIMA BARRA)
if [ -n "$3" ]; then
	sys_block_path="$2"
else
	sys_block_path="/sys/block/"
fi

#############################
# END INITALIZING VARIABLES #
#############################


###########################
# DETECCIÓ DE PARTICIONS  # PARÀMETRE 1 o PARAMETRE  [disc dur]  i retorna les particions
###########################
if [ "$1" != "0" ]; then
	hd=$1
	#Si s'especifica 1 dona totes les particions, si s'especifica una particio, fes solament aquesta
	if [ "$hd" = 1 ]; then
		hd=`ls $sys_block_path | sed 's/\/sys\/block\///g'`	
	fi
	
	for i in $hd
	do
		case $i in
			
			ram*|loop*)
			;;
			
			#Hard Disk Zone
			sd*|hd*|mm*)

			bus=`sh scripts/grephalinfo.sh /dev/$i bus`
			case $bus in
			usb|mmc|firewire|fw)
				es_removable="yes"
			;;
			*)
				es_removable="no"
			;;
			esac
			if [ "$es_removable" = "yes" ]; then
				cd $sys_block_path$i
				disc_durs=`ls -d ???[0-9]* 2>/dev/null`
				#definim la variable si es removable 
	# 			if [ `cat $sys_block_path$i/removable` = 0 ]; then
	# 				es_removable="no"
	# 			else
	# 				es_removable="yes"
	# 			fi
				
				#Si no hi ha cap partició i es removable, i fem que la $i sigui "" per quan fa la comparació de tamany que no falli
				[ -z "$disc_durs" -a "$es_removable" = "yes" ] && disc_durs=$i && i=""
				#Si no ha trobat cap disc dur que no falli
				for hd in $disc_durs
				do
				#Si no és 0 (vol dir k n'ha trobat)
				if [ -n "$hd" ]; then
					#afegim el dispositiu trobat a la llista
					dispositius_trobats="$dispositius_trobats $hd"
					#Si no esta al fstab, s'afegeix
					# 	cat $hd/size  #DEBUG
					#  	echo $hd  #DEBUG
						#  Si el size es més petit de 100, vol dir que és una partició lògica; per tan no l'incluïm
						# Així que: solament passa qui te el tamany mes gran de 100 o qui es removable
						if [ `cat $sys_block_path$i/$hd/size` -gt 100 -o "$es_removable" = "yes" ]; then
		# 				echo $hd  #DEBUG
		# 				Tamany: de blocks a mb
						size=$((`cat $sys_block_path$i/$hd/size` / 1000))
						size=$(($size / 2))
		# 				Apliquem una correcció d'un  0,24,pero solament admet nombres enters
						size=$(($size * 1024))
						size=$(($size / 1000))
						#El fs actual
						fs="`/usr/local/bin/fstyp /dev/$hd 2>/dev/null`"
							if  [ "$es_removable" = "no" ]; then
		# 					echo $i $es_removable $fs  #DEBUG
		# 						#Si no retorna res el $fs, fen un atac directe per intentar-lo muntar com a hfs/hfsplus, si no respon, 		llavors definim el sistema de fitxers com a auto (es un error del fstyp, el hfs/hfsplus no els reconeix)
								if [ -z "$fs" ]; then
									while true
									do
										[ ! -e /muntatge_temporal ] && mkdir /tmp/muntatge_temporal
										mount -t hfs /dev/$hd /tmp/muntatge_temporal 2>/dev/null && fs="hfs" && break
										mount -t hfsplus /dev/$hd /tmp/muntatge_temporal 2>/dev/null && fs="hfsplus" && break
										fs="auto" && break
									done
									umount /tmp/muntatge_temporal 2>/dev/null
									[ -z "`grep /tmp/muntatge_temporal /proc/mounts`" ] && rm -fr /tmp/muntatge_temporal
								fi
				########################
				# Les SWAP entren aquí #
				########################
								#Si es una swap, muntal com una swap
								if [ $fs = "swap" ]; then
									echo -n "$hd-swap-$size-82 "
								else
				##########################
				# Les particions NORMALS #
				##########################
									# Si no, muntal com un dispositiu normal
									echo -n "$hd-$fs-$size "
								fi
							# Si es removable i tens submount monta'l amb submount, sino, normal
							else
				############################################
				# Els EXTRAÏBLES normals (pen drives, etc) #
				############################################
							#Si la en /sys/block/$hd/device/bus/drivers hi ha algo k diu "cdrom" el tractarem com un cdrom, sino, no
								if [ -z "`ls /sys/block/$hd/device/bus/drivers 2>/dev/null | grep -i cdrom`" ]; then
									fs=`/usr/local/bin/fstyp /dev/$hd 2>/dev/null`
									if [ -z "$fs" ]; then
										fs=`fdisk -l /dev/$i | grep $hd | sed s:*::g | awk ' { print $6 } ' 2>/dev/null`
										[ -z "$fs" ] && fs=auto
									fi
									echo -n "$hd-$fs-$size "
								else
				#########################
				# Els CDROM entren aquí #
				#########################
									continue
								fi
							fi
						fi
					fi
				done
			fi
			;;
	
			#Floppy Zone
			fd*)
		############################
		# Els DISQUETS entren aquí #
		############################
			continue
			;;
	
			#Other Zone
			*)
			continue
			;;
		esac
	done
fi

##########################
# DETECCIÓ DE DISCS DURS #  PARÀMETRE 0
##########################
if [ "$1" = "0" ]; then
for i in `ls $sys_block_path | sed 's/\/sys\/block\///g'`
	do
		case $i in
			
			ram*|loop*|fd*)
			;;
	
			#Hard Disk Zone
			sd*|hd*|mm*)
# 			echo $sys_block_path$i/size  #DEBUG
			bus=`sh scripts/grephalinfo.sh /dev/$i bus`
			case $bus in
			usb|mmc|firewire|fw)
				es_removable="yes"
			;;
			*)
				es_removable="no"
			;;
			esac

			if  [ "$es_removable" = "yes" ]; then
				size=$((`cat $sys_block_path$i/size` / 1000))
				size=$(($size / 2))
		# 				Apliquem una correcció d'un  0,24,pero solament admet nombres enters
				size=$(($size * 1024))
				size=$(($size / 1000))
				echo "$i-$size"
# 			else
# 				if [ -z "`ls $sys_block_path$i/device/bus/drivers 2>/dev/null | grep -i cdrom`" ]; then
# 				size=$(expr `cat $sys_block_path$i/size` \/ 1000)
# 				size=$(expr $size \/ 2)
# 		# 				Apliquem una correcció d'un  0,24,pero solament admet nombres enters
# 				size=$(expr $size \* 1024)
# 				size=$(expr $size \/ 1000)
# 				echo "$i-$size"
# 				fi
			fi
			;;
	
			#Other Zone
			*)
			;;
		esac
	done
fi
