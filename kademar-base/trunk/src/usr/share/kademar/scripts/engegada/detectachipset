#!/bin/bash
# Chipset detector for kademar
# by Marco A. Romero "Capzo" , GNU/GPL  2006
# Only tested for Xorg. Would be ok to adapt it to XFree86

# Called from xautoconf

#Modified 10-04-07 - Use  dirbase  with first param to have a target for installed systems
#Modified 05-06-10 - Modification for new xsession script (kademar 4.9.5 +)

#set -x  #DEBUG Mode

# $1 It's the target for installed systems (use on installer)
dirbase="$1"

kversion=`uname -r`

#Grep all lines that talks about display "VGA"
display_driver=`lspci | grep -i "VGA Compatible controller:" | tr A-Z a-z | sed s/"vga compatible controller"://g`

#If no returns, it means lspci detects as "display adapter"
[ -z "$display_driver" ] && display_driver=`lspci | grep -i "Display:" | tr A-Z a-z`

# echo $display_driver
case "$display_driver" in

# 	*[Rr]adeon\ [Hh][Dd]*)
# 		display_driver="radeonhd"
# 	;;

	*alliance*)
		# echo It's a Alliance Semiconductor Corporation ProMotion and uses driver apm 
		display_driver=apm
	;;
	*'ark logic'*)
		# echo It's a graphic card with chipset ARK Logic Inc. and uses driver ark
		display_driver=ark
	;;
	
	
	*' ati '*)
		# echo It's a graphic card ATI Rage o Radeon and uses driver ati
		# echo ati
		#Comprobar que en las XFree86 no haga falta distinguir entre driver radeon o driver r128, si hace falta,hacer algo parecido a lo de S3
	
		#si existeix el driver propietari de fglrx, lutilitzarem, sino, passarem d'ell (XFREE)
		if [ -e /lib/modules/$kversion/misc/fglrx.ko -o -e /lib/modules/$kversion/updates/dkms/fglrx.ko ]; then
			if [ -e /usr/X11R6/lib/modules/dri/fglrx_dri.so ]; then
				display_driver=fglrx
			fi
		else
			#si existeix el driver propietari de fglrx, lutilitzarem, sino, passarem d'ell (X.org)
			if [ -e /lib/modules/$kversion/misc/fglrx.ko -o -e /lib/modules/$kversion/updates/dkms/fglrx.ko ]; then
				if [ -e /usr/lib/xorg/modules/drivers/fglrx_drv.so ]; then
					display_driver=fglrx
				else
					display_driver=ati
				fi
			else
				display_driver=ati
			fi
		fi
	
	
	;;
	*'chips and technologies'*)
		# echo It's a graphic card Chips & Technologies and uses driver chips
		display_driver=chips
	;;
	*cirrus*)
		# echo It's a graphic card Cirrus Logic and uses driver cirrus
		display_driver=cirrus
	;;
	*cyrix*)
		# echo It's a graphic card Cyrix MediaGX and uses driver cyrix
		display_driver=cyrix
	;;
	*glint*)
		# echo It's a graphic card 3DLabs and uses driver glint
		display_driver=glint
	;;
	*permedia*)
		# echo It's a graphic card 3DLabs o Texas Instruments Permedia and uses driver glint
		display_driver=glint
	;;
	*'number 9'*)
		# echo It's a Number 9 and uses driver i128
		display_driver=i128
	;;
	*intel*)
	# 	if [ -n "`echo $display_driver | grep -i 'i740'`" ]; then
	# # 		echo It's a Intel 740 and uses driver i740
	# 		display_driver=i740
	# 	else
	# 		echo It's a Intel 810 852 915 965G etc and uses driver i810
			display_driver=intel
	# 	fi
	;;
	
	*'twin turbo'*)
		# echo It's a Integrated Micro Solutions Twint turbo and uses driver imstt
		display_driver=imstt
	;;
	
	*matrox*)
		# echo It's a graphic card Matrox and uses driver mga
		display_driver=mga
	;;
	
	*neomagic*)
		# echo It's a graphic card Neomagic and uses driver neomagic
		display_driver=neomagic
	;;
	*newport*)
		# echo It's a graphic card que usa el driver newport
		display_driver=newport
	;;
	*'national semiconductor'*)
		# echo It's a graphic card de National Semiconductor Corporation and uses driver nsc
		display_driver=nsc
	;;
	
	*nvidia*)
		# echo It's a graphic card de Nvidia and uses driver nv
		#Cuidado con las Riva128 que no se iniciaran con un depth de 16 bit, hay que poner 15 bit
		
		#If it has a Nvidia TNT, use nv driver. TNT Hack.
		if [ -n "`lspci | grep -i vga | egrep -i tnt`" ]; then
			display_driver=nv
		else
			#XFREE 86
			if [ -e /usr/X11R6/lib/modules/drivers/nvidia_drv.o -a -z "`lspci | grep -i vga | egrep -i tnt`" ]; then
				#Comprobacio de l'existencia dels moduls de nvidia (propietar) pel kernel
				if [ -e /lib/modules/$kversion/nvidia/nvidia.ko -o -e /lib/modules/$kversion/kernel/drivers/video/nvidia.ko ]; then
					#Si el de nucli també hi es, i ja estem utilitzant el de nvidia, no facis res
					#Hack, perque entengui que no ha de fer res. Es la millor manera, ja que així no s'ha d'afegir més codi
					display_driver=nvidia
				else
					#Si el de nucli no hi es, utilitzarem el normal (útil en canvis de nucli)
					display_driver=nv
				fi
			else
				#Si no hi és l'existencia dels de X, directament utilizem el nomal  (X.org)
				if [ -e /usr/lib/xorg/modules/drivers/nvidia_drv.o -o -e /usr/lib/xorg/modules/drivers/nvidia_drv.so ]; then
					if [ -e /lib/modules/$kversion/nvidia/nvidia.ko -o -e /lib/modules/$kversion/kernel/drivers/video/nvidia.ko ]; then
					
						display_driver=nvidia
					else
						display_driver=nv
					fi
				else
					#Si el de nucli no hi es, utilitzarem el normal (útil en canvis de nucli)
					display_driver=nv
				fi
			fi
		fi
	
	
	;;
	*rendition*)
		# echo It's a graphic card Rendition Verite o Diamond Stealth II and uses driver  rendition
		display_driver=rendition
	;;
	*'s3 inc'*)
	
		if [ -n "`echo $display_driver | grep -i 'virge'`" ]; then
	# 		echo It's a graphic card S3 Inc Virge and uses driver s3virge
			display_driver=s3virge
		elif [ -n "`echo $display_driver | grep -i 'trio 3d'`" ]; then
	# 		echo It's a graphic card S3 Inc Trio 3D and uses driver s3virge
			display_driver=s3virge
		elif [ -n "`echo $display_driver | grep -i 'savage'`" ]; then
	# 		echo It's a S3 Inc Savage and uses driver savage
			display_driver=savage
		else
	# 		echo It's a graphic card S3 Inc and uses driver s3
			display_driver=s3
		fi
	;;
	*silicon*)
	
		if [ -n "`echo $display_driver | grep -i 'integrated'`" ]; then
	# 		echo It's a graphic card Silicon Integrated Systems SiS and uses driver sis
			display_driver=sis
		else
	# 		echo It's a graphic card Silicon Motion and uses driver siliconmotion
			display_driver=siliconmotion
		fi
		#Hay un driver llamado sisusb para una tarjeta usb, la SiS315E/PRO pero supongo que no sale con el lspci
	;;
	*xabre*)
		# echo It's a graphic card SiS con chipset XGI Xabre and uses driver sis
		display_driver=sis
	;;
	*3dfx*)
		# echo It's a 3fx Interactive Voodoo 3 4 5 y utiliza el driver tdfx
		display_driver=tdfx
		# Para soporte Voodo 1 y Voodoo 2, utilizar el driver voodoo, creo que estas graphic cards no salen como VGA compatible controller , habria que hacer un grep a Multimedia Video controller para poder detectarlas
	;;
	
	*' tga '*)
		# echo It's a graphic card de Digital Equipment Corporation and uses driver tga
		display_driver=tga
	;;
	*trident*)
		# echo It's a graphic card de Trident Microsystems and uses driver trident
		display_driver=trident
	;;
	*tseng*)
		# echo It's a graphic card de Tseng Labs Inc and uses driver tseng
		display_driver=tseng
	;;
	*' via '*)
		# echo It's a graphic card integrada de VIA Technologies posiblemente S3 Unichrome and uses driver via
		display_driver=via
	;;
	*vmware*)
		# echo It's starting from VMWare
		display_driver=vmware
	;;
	*virtualbox*)
		# echo It's starting from VirtualBox and Guest Additions are installed
		if [ -e /usr/lib/xorg/modules/drivers/vboxvideo_drv.so ]; then
			display_driver=vboxvideo
		else
			display_driver=vesa
		fi
	;;
	*)
		# echo We will use vesa driver
		display_driver=vesa
	;;

esac




echo "XMODULE=$display_driver" >> /var/tmp/xserver
echo $display_driver




######################   RECUPERA ACCELERACIO  #####################

# Si es NVIDIA el modul, mirem de que el libgl estigui ben configurat
libglx_nvidia="`ls $dirbase/usr/lib/xorg/modules/extensions/libglx.so.1.0* 2>/dev/null`"
libgl_nvidia="`ls $dirbase/usr/lib/libGL.so.1.0* 2>/dev/null`"

#Suport als nous últims drivers de nvidia
[ -z "$libglx_nvidia" ] && libglx_nvidia="`ls $dirbase/usr/lib/xorg/modules/extensions/libglx.so.????* 2>/dev/null`"
[ -z "$libgl_nvidia" ] && libgl_nvidia="`ls $dirbase/usr/lib/libGL.so.????* 2>/dev/null`"

#Si el dirbase no es 0, treiem la seva influencia en el path
#Sino els links es crearien malament, ja que portarien el dirbase en la ruta d'enllaç
if [ -n "$dirbase" ]; then
	libglx_nvidia="`echo $libglx_nvidia | sed s:$dirbase::g`"
	libgl_nvidia="`echo $libglx_nvidia | sed s:$dirbase::g`"
fi

# Pels moduls NVIDIA, voldrem el Link, i si no, voldrem que sigui l'original
# Si es el modul nvidia i el GLX de nvidia està instal·lat
if [ "$display_driver" = "nvidia" -a -n "$libglx_nvidia" ]; then
	#Si no és un link (volem el link a les GLX de nvidia) el creem
	if [ ! -L "$dirbase/usr/lib/xorg/modules/extensions/libglx.so" ]; then
	#Copiem el glx vell per si l'hem de restaurar
		rm -f "$dirbase/usr/lib/xorg/modules/extensions/libglx.so_kademar_replaced"
		mv "$dirbase/usr/lib/xorg/modules/extensions/libglx.so" "$dirbase/usr/lib/xorg/modules/extensions/libglx.so_kademar_replaced"
		ln -s "$libglx_nvidia" "$dirbase/usr/lib/xorg/modules/extensions/libglx.so"
	fi
	#Posa l'enllaç cap a libGL de nvidia
	rm -f "$dirbase/usr/lib/libGL.so"
	rm -f "$dirbase/usr/lib/libGL.so.1"

	#Utilitza el normal, si el de NVIDIA no existeix
	[ -z "$libgl_nvidia" ] && libgl_nvidia="/usr/lib/libGL.so.1.2"
	ln -s "$libgl_nvidia" "$dirbase/usr/lib/libGL.so"
	ln -s "$libgl_nvidia" "$dirbase/usr/lib/libGL.so.1"
else
#si el link està fet (i no es NVIDIA el modul, o no existeix) i existeix la còpia (per si canviem  nvidia -> ati per.exemple)
	if [ -L "$dirbase/usr/lib/xorg/modules/extensions/libglx.so" -a -e "$dirbase/usr/lib/xorg/modules/extensions/libglx.so_kademar_replaced" ]; then
		rm -f "$dirbase/usr/lib/xorg/modules/extensions/libglx.so"
		cp "$dirbase/usr/lib/xorg/modules/extensions/libglx.so_kademar_replaced" "$dirbase/usr/lib/xorg/modules/extensions/libglx.so"
	fi

	#Restaura l'enllaç dels libGL
	rm -f "$dirbase/usr/lib/libGL.so"
	rm -f "$dirbase/usr/lib/libGL.so.1"
	ln -s "/usr/lib/libGL.so.1.2" "$dirbase/usr/lib/libGL.so.1"
	ln -s "/usr/lib/libGL.so.1.2" "$dirbase/usr/lib/libGL.so"
fi
