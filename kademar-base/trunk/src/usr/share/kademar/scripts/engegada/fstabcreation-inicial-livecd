#!/bin/bash

#Creador del fitxer Fstab - DESTRUCTOR 
# AVÍS: ELIMINA EL FSTAB ANTERIOR (no és respectuós). I no purga el /mnt.  Ideal per live-cd


# MODE TO CALL IT
#  fstabcreation-inicial-livecd [path to /etc/fstab] [path to /mnt] [path to /sys/block/  (NECESSARY LAST SLASH ON PATH)]

#PATH="/bin:/usr/bin:/sbin:/usr/sbin"; export PATH
umask 022

#Colors:

# Reset fb color mode
RESET="]R"
# ANSI COLORS
# Erase to end of line
CRE="
[K"
# Clear and reset Screen
CLEAR="c"
# Normal color
NORMAL="[0;39m"
# RED: Failure or error message
RED="[1;31m"
# GREEN: Success message
GREEN="[1;32m"
# YELLOW: Descriptions
YELLOW="[1;33m"
# BLUE: System mesages
BLUE="[1;34m"
# MAGENTA: Found devices or drivers
MAGENTA="[1;35m"
# CYAN: Questions
CYAN="[1;36m"
# BOLD WHITE: Hint
WHITE="[1;37m"

#End colors

echo "${YELLOW}Creating /etc/fstab${NORMAL}"

#########################
# INITALIZING VARIABLES #
#########################

#Definició inicial de variables

#primer parametre passat = ruta al fstab
if [ -n "$1" ]; then
	ruta_fstab="$1"
else
	ruta_fstab="/etc/fstab"
fi

#segon parametre passat = ruta al mnt
if [ -n "$2" ]; then
	ruta_mnt="$2"
else
	ruta_mnt="/mnt"
fi

#segon parametre passat = ruta al /sys/block
if [ -n "$3" ]; then
	sys_block_path="$3"
else
	sys_block_path="/sys/block/"
fi

if [ -d /lib/modules/`uname -r`/kernel/fs/subfs ]; then
	submount="yes"
else
	submount="no"
fi

#If /linuxrc exists means that it is running on livecd -> mount rootfs line have to be in fstab file
if [ -e /initrd/linuxrc ]; then
	root_mount="aufs / aufs rw 0 0"
else
	root_mount=""
fi

#Variable contador (de cdroms) a zero
contador="0"

#############################
# END INITALIZING VARIABLES #
#############################



isRemovable(){
#Function to know if a device is removable or not

hd=$1

for i in `hal-find-by-property --key block.device --string "$hd"`
do
 firstone=$i
 break
done

# if not found, try to hack it
if [ -z "$firstone" ]; then
	hd=`echo $1 | sed s:"sr":"scd":g`
	for i in `hal-find-by-property --key block.device --string "$hd"`
	do
		firstone=$i
		break
	done
	capab=$(hal-get-property --udi "$firstone"  --key info.capabilities)
fi

capab=$(hal-get-property --udi "$firstone"  --key info.capabilities)


#then check if cdrom if no have been cought a disk (volume) instead the block-device
if [ "$(hal-get-property --udi `hal-find-by-property --key block.device --string "$hd"`  --key block.is_volume)" = true ]; then
# echo parent_hack $1
	parent=$(hal-get-property --udi `hal-find-by-property --key block.device --string "$hd"`  --key info.parent)
	capab=$(hal-get-property --udi $parent --key info.capabilities)
fi

a=$(hal-get-property --udi `hal-find-by-property --key block.device --string "$hd"`  --key storage.bus)

# echo $capab

# echo $capab
if [ -n "`echo "$capab" | grep -i cdrom`" -o -n "`echo "$capab" | grep -i scsi`" ]; then
#si es cdrom = YES
	echo yes
else
#si es de usb = YES
	if [ "$a" = usb ]; then
		echo yes
	else
		echo no
	fi
fi
}



#############################
# FUNCTION GREP HAL INFO    #
#############################
halinfo(){
# $1 = /dev/sda4  (dispositiu a analitzar)
# $2 = dvd/label  (informacio a obtenir)

halinfovar=""

#Si el que volem es la informacio del DVD, treiem els CDs introduits en les unitats
if [ "$2" = dvd ]; then
	udi="`hal-find-by-property --key block.device --string $1 | grep -i stor`"
else
	udi="`hal-find-by-property --key block.device --string $1`"
fi

case "$2" in

dvd)
	key="storage.cdrom.dvd"
;;

label)
	key="volume.label"
;;


esac

halinfovar="`hal-get-property --udi $udi --key  $key`"

}

#############################
# END FUNCTION GREP HAL INFO#
#############################


#Creació del /etc/fstab buit
cat > $ruta_fstab << EOF 
#/etc/fstab: static file system information.
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
$root_mount
proc		/proc		proc	defaults	0	0 
sysfs     	/sys    	sysfs   defaults        0       0
devpts	        /dev/pts	devpts	gid=5,mode=620 	0	0
/proc/bus/usb	/proc/bus/usb	usbfs	defaults	0	0
shm             /dev/shm        tmpfs   nodev,nosuid,noexec 0   0



EOF

for i in `ls $sys_block_path | sed "s:$sys_block_path/::g"`
do

	case $i in
		
		ram*)
		;;
		
		loop*)
		;;

		#Hard Disk Zone
		sd*|hd*|sr*)
		cd $sys_block_path$i
		disc_durs=`ls -d ???[0-9]* 2>/dev/null`
		#definim la variable si es removable 
		es_removable=$(isRemovable /dev/$i 2>/dev/null)
# 		echo $i
# 		echo $es_removable
		#Si no hi ha cap partició i es removable, i fem que la $i sigui "" per quan fa la comparació de tamany que no falli
		[ -z "$disc_durs" -a "$es_removable" = "yes" ] && disc_durs=$i && i=""
		#Si no ha trobat cap disc dur que no falli
		for hd in $disc_durs
		do
			if [ -n "$hd" ]; then
			#Posa a zero la variable
			opcions_especifiques=""
			# 	cat $hd/size  #DEBUG
			#  	echo $hd  #DEBUG
				#  Si el size es més petit de 100, vol dir que és una partició lògica
				if [ `cat $sys_block_path$i/$hd/size` -gt 100 -o "$es_removable" = "yes" ]; then
# 				echo $i 
# 			 	echo $hd  #DEBUG
				# Afegim un espai buit
				echo '' >> $ruta_fstab
				# si és removable, vol dir que s'ha de muntar amb subfs si es pot, o si no, normal, però activant l'avís
					if  [ "$es_removable" = "no" ]; then
					# Detecció del tipus de sistema de fitxers de la partició, en els removables no fa falta saber el sistema de fitxers, ja que pot variar (els posem amb auto)
						fs=$(blkid /dev/$hd -o value -s TYPE)
						#Si no retorna res, fen un atac directe per intentar-lo muntar com a hfs/hfsplus, si no respon, llavors definim el sistema de fitxers com a auto
						if [ -z "$fs" ]; then
							while true
							do
								[ ! -e /muntatge_temporal ] && mkdir /muntatge_temporal
								mount -t hfs /dev/$hd /muntatge_temporal 2>/dev/null && fs="hfs" && break
								mount -t hfsplus /dev/$hd /muntatge_temporal 2>/dev/null && fs="hfsplus" && break
								fs="auto" && break
							done
							umount /muntatge_temporal 2>/dev/null
							[ -z "`grep /muntatge_temporal /proc/mounts`" ] && rm -fr /muntatge_temporal
						fi
			########################
			# Les SWAP entren aquí #
			########################
						#Si es una swap, muntal com una swap
						if [ $fs = "swap" ]; then
							echo "/dev/$hd  swap  swap  pri=0  0  0" >> $ruta_fstab
						else
			##########################
			# Les particions NORMALS #
			##########################
							#  Creem la entrada a /mnt  si no es una swap
							mkdir -p $ruta_mnt/$hd 2>/dev/null
							opcions_especifiques=""
							#Correccio de Permisos
							chmod 777 $ruta_mnt/$hd
							#Ús de NTFS-3G en cas de que sigui $fs=NTFS i existeixi
							if [ "$fs" = "ntfs" ]; then
								opcions_especifiques=",user,umask=000,locale=es_ES.iso88591"
								#Comprovació existencia ntfs-3g
								if [ -e "/usr/local/bin/ntfs-3g" -o -e "/usr/bin/ntfs-3g" ]; then
									echo "/dev/$hd /mnt/$hd  ntfs-3g  silent,noauto,umask=000,gid=users$opcions_especifiques  0  0" >> $ruta_fstab
								else
								#Si no es pot muntar amb lectura,escriptura, munta'l normal
									echo "/dev/$hd /mnt/$hd  $fs  defaults,noauto,rw,exec,noauto,user,umask=000$opcions_especifiques  0  0" >> $ruta_fstab
								fi
							else
								#Si el sistema de fitxers es vfat, fat, en les opcions_especifiques, afegeix el umask i user
								if [ "$fs" = "vfat" -o "$fs" = "fat" ]; then
									opcions_especifiques=",user,umask=000,iocharset=iso8859-1"
								fi
								# Si no, muntal com un dispositiu normal
								echo "/dev/$hd /mnt/$hd  $fs  defaults,noauto,rw,exec,noauto$opcions_especifiques  0  0" >> $ruta_fstab
							fi
						fi
					# Si es removable i tens submount munta'l amb submount, sino, normal
					else
			############################################
			# Els EXTRAÏBLES normals (pen drives, etc) #
			############################################

# /sys/block/$i/device/bus/drivers


# 						echo $hd
						#Si la en /sys/block/$hd/device/bus/drivers hi ha algo k diu "cdrom" el tractarem com un cdrom, sino, no
						if [ -n "`ls $sys_block_path/$hd/device/bus/drivers 2>/dev/null | grep -i cdrom`" -o "`cat $sys_block_path$hd/device/type`" = 5 ]; then
							#Convert   sr0 -> scd0  (hack x ser detectat en HALINFO)
							#  Creem la entrada a /mnt  si no es una swap
# 							mkdir -p $ruta_mnt/$hd 2>/dev/null
# 							if [ $submount = "yes" ]; then
# 								echo "/dev/$hd  /mnt/$hd subfs fs=auto,rw,exec,user,sync,umask=000 0 0" >> $ruta_fstab
# 							else
# 								echo "/dev/$hd  /mnt/$hd  auto  rw,user,exec,noauto,sync,umask=000  0  0" >> $ruta_fstab
	#							warning="active"
# 							fi
# 						else
			#########################
			# Els CDROM entren aquí #
			#########################
					###############################
					#    Tria del Nom  CD o DVD   #
					#			      #
					 	nom=""		      #
					#			      #
					 	halinfo "/dev/$hd" dvd
					 	
					 	if [ -z "$halinfovar" ]; then #Convert   sr0 -> scd0  (hack x ser detectat en HALINFO)
							hd=`echo $hd | sed s:"sr":"scd":g`
							halinfo "/dev/$hd" dvd
						fi
					 	
					 	if [ "$halinfovar" = true ]; then
					 		nom=dvd	      #
					 	else		      #
					 		nom=cdrom     #
					 	fi		      #
					###############################

							#Convert   scd0 -> sr0  (hack x ser detectat en HALINFO)
							hd=`echo $hd | sed s:scd:sr:g`
							#Si la variable contador es = a 0, fem que no apareixi
							[ "$contador" = 0 ] && contador=""
							#  Creem la entrada a /mnt  si no es una swap
							mkdir -p $ruta_mnt/$nom$contador 2>/dev/null
							#Si tens submount muntal amb submount, si no... pos va a ser k no!!!
# 							if [ $submount = "yes" ]; then
# 								echo "/dev/$hd  /mnt/cdrom$contador subfs fs=cdfss,ro,exec,user,umask=000 0 0" >> $ruta_fstab
# 							else
								echo "/dev/$hd  /mnt/$nom$contador  udf,iso9660 users,noauto  0  0" >> $ruta_fstab
	#							warning="active"
# 							fi
							#Si el contador no apareix, vol dir que era Zero, hack a la lina 163, per tant el posem a 0
							[ "$contador" = "" ] && contador=0
							#Posem a zero el contador (per no influir amb número si es un cd/dvd) cdrom2 dvd3 -> cdrom2 dvd
							contador=0
						fi
					fi
				fi
			fi
		done
		;;

		#Floppy Zone
		fd*)
############################
# Els DISQUETS entren aquí #
############################
		mkdir -p $ruta_mnt/$i 2>/dev/null
		echo '' >> $ruta_fstab
		if [ $submount = "yes" ]; then
			echo "/dev/$i  /mnt/$i subfs fs=floppyfss,rw,sync,umask=000  0 0" >> $ruta_fstab
		else
			echo "/dev/$i  /mnt/$i  auto  rw,exec,users,noauto,umask=000  0  0" >> $ruta_fstab
# 			warning="active"
		fi
		chmod 777 $ruta_mnt/$i
		;;

		#Other Zone
		*)
###########
######   TEORICAMENt JA no s'arriba aqui!!!
########3
################################################
# Els CDROM insurrectes (sr0, etc) entren aquí #
################################################
		#If device/type is 5, it seems to be a CDRom, so, mount it as a cdrom
		if [ `cat $sys_block_path$i/device/type` = 5 ]; then
			mkdir -p $ruta_mnt/$i 2>/dev/null
			echo '' >> $ruta_fstab
# 			if [ $submount = "yes" ]; then
# 				echo "/dev/$i  /mnt/$i subfs fs=cdfss,rw,exec,user,sync,umask=000 0 0" >> $ruta_fstab
# 			else
				echo "/dev/$i  /mnt/$i  udf,iso9660  users,noauto  0  0" >> $ruta_fstab
#				warning="active"
# 			fi
		fi
		;;
	esac
done

#Addició de Linies per   Klik
echo "
#Klik Lines
/tmp/app/1/image /tmp/app/1 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
/tmp/app/2/image /tmp/app/2 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
/tmp/app/3/image /tmp/app/3 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
/tmp/app/4/image /tmp/app/4 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
/tmp/app/5/image /tmp/app/5 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
/tmp/app/6/image /tmp/app/6 cramfs,iso9660 user,noauto,ro,loop,exec 0 0
/tmp/app/7/image /tmp/app/7 cramfs,iso9660 user,noauto,ro,loop,exec 0 0" >> $ruta_fstab
