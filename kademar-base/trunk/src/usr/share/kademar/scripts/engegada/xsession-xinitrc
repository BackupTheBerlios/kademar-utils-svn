#!/bin/sh -x
PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/local/bin:."
export PATH

umask 022

USER="kademar"

. /etc/environment
[ -e /var/xserver ] && . /var/xserver

 [ -n "$KDEDIR" ] || KDEDIR="/usr"
 export KDEDIR
 
 [ -n "$HOSTNAME" ] || HOSTNAME="$(hostname)"
 export HOSTNAME
 
 [ -z "$USER" ] && USER="$(id -nu)"
 export USER
 
 [ -z "$HOME" -o "$HOME" = "/" ] && HOME="/home/$USER"
 export HOME


#Variable BACKGROUND agafada del fitxer de configuració (diferents gustos de kademar)
[ -e /usr/share/kademar/config-livecd ] && . /usr/share/kademar/config-livecd

#[ -n "$xsession_background" -a -e "$xsession_background" ] || xsession_background="-solid black"
#DISPLAY=:0 xloadimage -onroot -fullscreen -shrink -smooth -border black -quiet $xsession_background >/dev/null 2>&1
# Set default cursor (artwiz)
xsetroot -cursor_name left_ptr

# add at least _one_ entry to xauth
# remove when updated nxclient is available

xauth add $DISPLAY  MIT-MAGIC-COOKIE-1  $(mcookie)

# DONTCHANGE=""
# [ -e $HOME/.kde/share/config/kdeglobals ] && DONTCHANGE="yes"

# Don't use this yet. We don't have TTF equivalents for all
# Fonts yet.
# QT_XFT=1
# export QT_XFT

# Read default language/keyboard/background image
#[ -f /etc/sysconfig/knoppix ]  && . /etc/sysconfig/knoppix
#[ -f /etc/sysconfig/i18n ]  && . /etc/sysconfig/i18n
#if [ -n "$LANG" ]; then
# Try to repair a KDE/locale bug
#LA="$LANG"
#L="${LANG%%@*}"
#C=$(awk '/^'"$LANG"'/{print $2;exit 0}' /etc/locale.gen 2>/dev/null)
#[ -n "$L" -a -n "$C" ] && LANG="$L.$C"
#LC_ALL="$LA"
#export LANG
#fi

# if [ -n "$LC_ALL" ]; then
# export LC_ALL
# fi

#[ -f /etc/sysconfig/keyboard ]  && . /etc/sysconfig/keyboard

# Read Desktop, currently kde, gnome, larswm and twm are supported in this script
#[ -f /etc/sysconfig/desktop ]  && . /etc/sysconfig/desktop

###############################
# Check if it's a Panoramic Monitor.
#####


mkdir -p "/var/kademar/"

#configure monitor
sh /usr/share/kademar/scripts/engegada/detect-monitor

#execute real config
sh /usr/share/kademar/scripts/engegada/kademar-inici.d-standalone/common-configure_wallpapers


# kde is the default
[ -z "$DESKTOP" ] && DESKTOP="kde"

#######################################
# # Copy profiles if not already present
# rsync -Ha --ignore-existing /etc/skel/{.acrorc,.Xdefaults,.gimp*,.gconf*,.bashrc,.nessus*,.links,.local,.lynx*,.qt,.xine,tmp} $HOME/ 2>/dev/null
# [ "$USER" = "kademar" ] && rsync -Ha --ignore-existing /usr/share/knoppix/profile/{.gnupg,.acrorc,.Xdefaults,.bashrc,.nessus*,.links,.lynx*,.qt,.xine,tmp} $HOME/ 2>/dev/null
# [ "$USER" = "kademar" -a -f /usr/share/knoppix/profile/.fonts.cache-1 ] && rsync -H --ignore-existing /usr/share/knoppix/profile/.fonts.cache-1 $HOME/ 2>/dev/null
# 
# # We DO need the .gnome* directory for some programs that set permissions incorrectly
# mkdir -p $HOME/.gnome/accels $HOME/.gnome_private
# 
# FREESPACE="$(df -k "$HOME" | awk '/^\/|^rootfs/{print $4}')"
# 
# if [ ! -e $HOME/.netscape -a "$FREESPACE" -gt 1500 ] && [ -d /etc/skel/.netscape -o -d /usr/share/knoppix/profile/.netscape ]; then
# rsync -Ha --ignore-existing /etc/skel/.netscape $HOME/ 2>/dev/null
# [ "$USER" = "knoppix" ] && rsync -Ha --ignore-existing /usr/share/knoppix/profile/.netscape $HOME/ 2>/dev/null
# fi
# if [ ! -e $HOME/.mozilla -a "$FREESPACE" -gt 1500 ] && [ -d /etc/skel/.mozilla -o -d /usr/share/knoppix/profile/.mozilla ]; then
# rsync -Ha --ignore-existing /etc/skel/.mozilla $HOME/ 2>/dev/null
# [ "$USER" = "knoppix" ] && rsync -Ha --ignore-existing /usr/share/knoppix/profile/.mozilla $HOME/ 2>/dev/null
# fi
# 
# # It seems to be vital for galeon that a netscape bookmarks file exists
# touch $HOME/.netscape/bookmarks.html >/dev/null 2>&1 || true
# 
# if [ -n "$LANGUAGE" ]; then
# # Set mozilla and netscape preferred languages
# for f in `ls -1 $HOME/.mozilla/*/*/prefs.js $HOME/.netscape/preferences.js 2>/dev/null`; do
# echo 'user_pref("intl.accept_languages", "'"$LANGUAGE"', es");' >>"$f"
# case "$LANGUAGE" in
# de|at|ch)
# echo 'user_pref("general.useragent.contentlocale", "AT");' >>"$f"
# echo 'user_pref("general.useragent.locale", "de-AT");' >>"$f" ;;
# es)
# echo 'user_pref("general.useragent.contentlocale", "ES");' >>"$f"
# echo 'user_pref("general.useragent.locale", "es-ES");' >>"$f" ;;
# ca)
# echo 'user_pref("general.useragent.contentlocale", "CA");' >>"$f"
# echo 'user_pref("general.useragent.locale", "es-CA");' >>"$f" ;;
# gl)
# echo 'user_pref("general.useragent.contentlocale", "GL");' >>"$f"
# echo 'user_pref("general.useragent.locale", "es-GL");' >>"$f" ;;
# eu)
# echo 'user_pref("general.useragent.contentlocale", "EU");' >>"$f"
# echo 'user_pref("general.useragent.locale", "es-EU");' >>"$f" ;;
# esac
# # Else leave default language
# done
# 
# for f in `ls -1 $HOME/.mozilla/*/*/chrome/chrome.rdf.$LANGUAGE 2>/dev/null`; do
# \mv -f "$f" "${f%%.${LANGUAGE}}"
# done
###########################################
#fi

# Star/OpenOffice preinstall, now done in soffice startscript
# [ -f /etc/skel/.sversionrc ] && \cp -au /etc/skel/.sversionrc $HOME/
# [ -f /etc/skel/.user60.rdb ] && \cp -au /etc/skel/.user60.rdb $HOME/
# [ -d /etc/skel/office -a "$FREESPACE" -gt 3500 ] && \
# rsync -Ha --ignore-existing /etc/skel/office $HOME/

playsound(){
# Play sound if soundcore module present (checking /dev/sndstat is unreliable)
OGGPLAY=/usr/bin/ogg123
PLAY=/usr/bin/wavp
[ -x "$PLAY" ] || PLAY=/usr/bin/play-sample
[ -x "$PLAY" ] || PLAY=/usr/bin/play
if [ -x "$OGGPLAY" -a -f /usr/share/sounds/startup.ogg ]; then
case "$(lsmod)" in *sound*) { $OGGPLAY -q -p 64 /usr/share/sounds/startup.ogg >/dev/null 2>&1 & } ; sleep 1 ;; esac
elif [ -f /usr/share/sounds/startup.wav -a -x "$PLAY" ]; then
case "$(lsmod)" in *sound*) { $PLAY /usr/share/sounds/startup.wav >/dev/null 2>&1 & } ; sleep 2 ;; esac
fi
}

fstartkde(){
########################################
# # Play sound
# playsound
# 
# if [ -z "$DONTCHANGE" ]; then
# # No persistent homedir, copy everything
# rsync -Ha --ignore-existing /etc/skel/{.kde*,Desktop} $HOME/ 2>/dev/null
#  if [ "$USER" = "knoppix" ]; then
#   rsync -Ha --ignore-existing /usr/share/knoppix/profile/{.kde*,Desktop} $HOME/ 2>/dev/null
#   # Build ksycoca database for KDE speedup
#   [ -d /usr/share/knoppix/profile/var/tmp/kdecache-knoppix ] && rsync -Ha --ignore-existing /usr/share/knoppix/profile/var/tmp/kdecache-knoppix/ /var/tmp/kdecache-knoppix 2>/dev/null
#  fi
########################################

# And sort icons first time (KDE bug?)
# Obsolete for KDE 3.2
#cat >>$HOME/.kde/Autostart/sorticons.desktop <<EOF
#[Desktop Entry]
#Name=Sort Icons
#Name[de]=Symbole aufräumen
#Exec=kfmclient sortDesktop
#Type=Application
#Icon=html
#Terminal=0
#EOF
########################################
# else
# # Only regenerate the config and Desktop files if missing
# \mkdir -p $HOME/.kde/share $HOME/Desktop
# rsync -Ha --ignore-existing /etc/skel/.kde/share/* $HOME/.kde/share/ 2>/dev/null
# [ "$USER" = "knoppix" ] && rsync -Ha --ignore-existing /usr/share/knoppix/profile/.kde/share/* $HOME/.kde/share/ 2>/dev/null
# rsync -Ha --ignore-existing /etc/skel/Desktop/* $HOME/Desktop/ 2>/dev/null
# [ "$USER" = "knoppix" ] && rsync -Ha --ignore-existing /usr/share/knoppix/profile/Desktop/* $HOME/Desktop/ 2>/dev/null
# rm -f $HOME/.kde/Autostart/sorticons.desktop
# fi

# 
# # Setup language/keyboard
# [ -d $HOME/.kde/share/config ] || mkdir -p $HOME/.kde/share/config
# if [ -z "$DONTCHANGE" ]; then
# touch $HOME/.kde/share/config/kdeglobals
# rm -f $HOME/.kde/share/config/kdeglobals.tmp
# sed -e 's/^Charset=.*$/Charset='"$CHARSET"'/' \
#     -e 's/^Country=.*$/Country='"$COUNTRY"'/' \
#     -e 's/^Language=.*$/Language='"$LANGUAGE"'/' \
#     $HOME/.kde/share/config/kdeglobals > $HOME/.kde/share/config/kdeglobals.tmp
# \mv -f $HOME/.kde/share/config/kdeglobals.tmp $HOME/.kde/share/config/kdeglobals


# if [ -z "$xsession_background" -o ! -e "$xsession_background" ]; then
# for i in jpg png gif; do
# xsession_background=/usr/local/lib/knoppix.$i
# [ -e "$xsession_background" ] && break
# done
# fi
# sed -e 's|Wallpaper=.*$|Wallpaper='"$xsession_background"'|g' \
#     $HOME/.kde/share/config/kdesktoprc > $HOME/.kde/share/config/kdesktoprc.tmp
# \mv -f $HOME/.kde/share/config/kdesktoprc.tmp $HOME/.kde/share/config/kdesktoprc
# touch -r /etc/skel/.kde/share/config/kdeglobals $HOME/.kde/share/config/kdeglobals 2>/dev/null
# touch $HOME/.kde/share/config/kxkbrc
# rm -f $HOME/.kde/share/config/kxkbrc.tmp
# 
# sed -e 's/^Layout=.*$/Layout='"$KDEKEYBOARD"'/' \
#     -e 's/^Additional=.*$/Additional='"$KDEKEYBOARDS"'/' \
#     $HOME/.kde/share/config/kxkbrc > $HOME/.kde/share/config/kxkbrc.tmp
# # No mostrar la banderita en las versiones catalán, gallego y euskera
# if [ ! "$LANGUAGE" = "es" ]; then
#     sed -e 's/^Use=.*$/Use='"False"'/' \
#     $HOME/.kde/share/config/kxkbrc > $HOME/.kde/share/config/kxkbrc.tmp
# fi    
# \mv -f $HOME/.kde/share/config/kxkbrc.tmp $HOME/.kde/share/config/kxkbrc
# touch -r /etc/skel/.kde/share/config/kxkbrc $HOME/.kde/share/config/kxkbrc 2>/dev/null
# 
# # Check for custom splashscreen in /cdrom/KNOPPIX
# if [ -d /cdrom/KNOPPIX/ksplash ]; then
# [ -d $HOME/.kde/share/apps ] || mkdir -p $HOME/.kde/share/apps
# ln -s /cdrom/KNOPPIX/ksplash $HOME/.kde/share/apps/
# fi
# 
# 
# fi
########################################

# Start KDE3
echo "kde_restart" >/var/xsession-commands
export XDM_MANAGED="/var/xsession-commands,maysd,mayfn,sched,method=classic"


kdehome="$HOME/.kde"
# [ -n "$KDEHOME" ] && kdehome="$KDEHOME"


# Link "tmp" resource to directory in /tmp
# Creates a directory /tmp/kde-$USER and links $KDEHOME/tmp-$HOSTNAME to it.
lnusertemp tmp >/dev/null

# Link "socket" resource to directory in /tmp
# Creates a directory /tmp/ksocket-$USER and links $KDEHOME/socket-$HOSTNAME to it.
lnusertemp socket >/dev/null

# Link "cache" resource to directory in /tmp
# Creates a directory /tmp/kcache-$USER and links $KDEHOME/cache-$HOSTNAME to it.
lnusertemp cache >/dev/null

# In case of dcop sockets left by a previous session, cleanup
# Should not be necessary for Knoppix.
dcopserver_shutdown

#Start KDE
/usr/bin/startkde

# load the splashscreen and progress indicator
# LD_BIND_NOW=true ksplash --nodcop
# sleep 2

# We set LD_BIND_NOW to increase the efficiency of kdeinit.
# kdeinit unsets this variable before loading applications.
# LD_BIND_NOW=true kdeinit +kcminit +knotify || \
#   { xmessage -geometry 500x100 "No pudo iniciarse kdeinit. Compruebe su instalación."; return 1; }

# finally, give the session control to the session manager
# Syntax:   ksmserver [--restore] [--windowmanager <wm>]
# if no windowmanager is specified, ksmserver will ensure kwin is started.
# [--restore] should be controlled by kdm
# kwrapper is used to reduce startup time and memory usage
# kwrapper ksmserver
# if [ "$?" -eq 255 ]; then
# xmessage -geometry 500x100 "No pudo iniciarse ksmserver. Compruebe su instalación."
# return 1
# fi

# Clean up - normally not necessary when running from CD
# ( kdeinit_shutdown ; dcopserver_shutdown ; artsshell -q terminate ) >/dev/null 2>&1 </dev/null
# EOF /usr/bin/kde3
# killall kdeinit 2>/dev/null
exit 0
}
# End startkde


fstartkde4(){
# Start KDE4
echo "kde_restart" >/var/xsession-commands
export XDM_MANAGED="/var/xsession-commands,maysd,mayfn,sched,method=classic"

/usr/bin/startkde
}

# starttwm: This is also the error fallback windowmanager. It should display
# an error message if it was started as such.
# Paraeters: "reasoncode" "reasoncode-specific description"
starttwm(){

XTERM=rxvt
type -path rxvt >/dev/null 2>&1 || XTERM=xterm
$XTERM -geometry +0-0 -bg black -fg green -T Shell &

MESSAGE=""
if [ -n "$1" ]; then
 case "$1" in
  lowmem)
   case "$LANGUAGE" in
    de|at|ch) MESSAGE="
Nicht genug Speicher zum Start von $DESKTOP!
(Mindestens $2 MB benötigt.)

Starte stattdessen den TWM Windowmanager.
Achtung: Nicht alle Programme im linke-
Maustaste-Menü werden funktionieren!
"
    ;;
    es|ca|gl|eu) MESSAGE="
No hay suficiente memoria para arrancar $DESKTOP!
(Se necesitan al menos $2 MB.)

Usando el gestor de ventanas TWM en su lugar.
Aviso: ¡No todos los programas en
el menú que aparece al pulsar el botón izquierdo
del ratón funcionarán aquí!
"
    ;;
    *) MESSAGE="
Not enough memory to start $DESKTOP!
(At least $2 MB required.)

Using TWM windowmanager instead.
Caution: Not all programs in
the left-Mousebutton-Menu will
work here!
"
    ;;
   esac
   ;;
  invalidwm)
   case "$LANGUAGE" in
    de|at|ch) MESSAGE="
Desktop-Manager '$DESKTOP' wird nicht unterstützt!

Starte stattdessen den TWM Windowmanager.
Achtung: Nicht alle Programme im linke-
Maustaste-Menü werden funktionieren!
"
    ;;
    es|ca|gl|eu) MESSAGE="
El gestor de ventanas '$DESKTOP' no esta soportado!

Usando el gestor de ventanas TWM en su lugar.
Aviso: ¡No todos los programas en
el menú que aparece al pulsar el botón izquierdo
del ratón funcionarán aquí!
"
    ;;
    *) MESSAGE="
Desktop manager '$DESKTOP' is not supported!

Using TWM windowmanager instead.
Caution: Not all programs in
the left-Mousebutton-Menu will
work here!
"
    ;;
   esac
  ;;
 esac
fi

if [ -n "$MESSAGE" ]; then
( xmessage -geometry -0+0 "
$MESSAGE
"
) &
sleep 4
fi

# playsound
exec twm
}

startgnome(){

type gnome-session >/dev/null 2>&1 || starttwm
rsync -Ha --ignore-existing /etc/skel/{.gnome*,.gtk*,.metacity*,GNUstep,.sawfish,.nautilus,Nautilus} $HOME/ 2>/dev/null
[ "$USER" = "knoppix" ] && rsync -Ha --ignore-existing /usr/share/knoppix/profile/{.gnome*,GNUstep,.sawfish,.nautilus,Nautilus} $HOME/ 2>/dev/null
#sed -e 's/^font=.*$/-*-fixed-medium-r-normal-*-14-*-*-*-*-*-'"$CHARSET"'/g' \
#  $HOME/.gnome/Terminal > $HOME/.gnome/Terminal.tmp
#\mv -f  $HOME/.gnome/Terminal.tmp $HOME/.gnome/Terminal
# Add HD partitions to GNOME desktop
#rm -f $HOME/.gnome-desktop/[hs]d[a-z][1-9]* 2>/dev/null
#[ ! -d $HOME/.gnome-desktop ] && mkdir -p $HOME/.gnome-desktop
#[ -f /cdrom/KNOPPIX/KNOPPIX ] && ln -s /cdrom $HOME/.gnome-desktop/ 2>/dev/null
#HDS="`ls -1d /mnt/[hs]d[a-z][1-9]* /mnt/cdrom* 2>/dev/null`"
#[ -n "$HDS" ] && ln -s $HDS $HOME/.gnome-desktop/ 2>/dev/null
#OPENWEBSCHOOL="/cdrom/Demos/OpenWebSchool"
#[ -e "$OPENWEBSCHOOL" ] && ln -s "$OPENWEBSCHOOL" $HOME/.gnome-desktop/OWS
# playsound


# nautilus2 cannot handle KDE icons correctly, so we have to remove them to avoid confusion
# find $HOME/Desktop -type f -size -2k -maxdepth 1 | while read f; do grep -qi '^\[.*Desktop Entry.*\]' "$f" && rm -f "$f"; done 2>/dev/null

# Remove old .gnome-desktop
# mv -f .gnome-desktop .gnome-desktop.removed 2>/dev/null

# Nautilus2 and others seem to depend on XFT
# GDK_USE_XFT=1 exec gnome-session --purge-delay=4000
GDK_USE_XFT=1 exec gnome-session
}

startlarswm(){
[ -e "$HOME"/.larswmrc ] || rsync -Ha --ignore-existing /etc/skel/.larswmrc $HOME/ 2>/dev/null
# playsound
exec larswm
}

startwindowmaker(){
GDK_USE_XFT=1 exec wmaker
}

starticewm(){
# [ -e /usr/bin/idesk ] && idesk &
# GDK_USE_XFT=1 exec icewm

#Icewm Complet amb tot el k hagi configurat
icewm-session
}

fstartlxde(){
startlxde
}


fstartorca(){
# Older compiz versions start gtk-window-decorator only if GNOME_DESKTOP_SESSION_ID is set.
[ -n "$GNOME_DESKTOP_SESSION_ID" ] || export GNOME_DESKTOP_SESSION_ID="LXDE"
export SAL_USE_VCLPLUGIN="gtk" GTK_MODULES="gail:atk-bridge"
startorca ; sleep 10 

# Orca, for some reason, ruins Alt_R on the german keyboard.
# This is a workaround to fix it.
# (
#  for ((i=0; i<30; i++)); do
#   sleep 2
#   xmodmap | grep -q 'mod1.*ISO_Level3_Shift' && xmodmap -e "remove mod1 = ISO_Level3_Shift"
#  done
# ) &

}

startfluxbox(){
GDK_USE_XFT=1 exec fluxbox
}

startenlightenment(){
GDK_USE_XFT=1 exec enlightenment
}

startxfce(){
GDK_USE_XFT=1
export GDK_USE_XFT

[ -e $HOME/.xfce ] || mkdir $HOME/.xfce
XFWM=xfwm

exec $XFWM
}

startxfce4(){
GDK_USE_XFT=1
export GDK_USE_XFT

# XFCE4 setup
if [ ! -e $HOME/.xfce4 ]; then
rsync -Ha --ignore-existing /etc/skel/.xf* /usr/share/knoppix/profile/.xf* $HOME/ 2>/dev/null
[ ! -d $HOME/.xfce4 ] && mkdir -p $HOME/.xfce4
echo "$xsession_background
auto" >$HOME/.xfce4/xfbdrc
fi
# Start the background graphics daemon
exec xfbd4 >/dev/null 2>&1 &
# This one may not exist yet - xfce4 settings manager
exec xfce-mcs-manager >/dev/null 2>&1 &
# The window manager component
exec xfwm4 --daemon >/dev/null 2>&1 &
exec xftaskbar4 >/dev/null 2>&1 &
exec xfdeskmenu -button=3 >/dev/null 2>&1 &
exec xfdesktop >/dev/null 2>&1 &
exec xfce4-iconbox >/dev/null 2>&1 &
# The background menu is started last
XFWM=xfce4-panel
exec $XFWM
}

stringinstring(){
case "$2" in *$1*) return 0;; esac
return 1
}

# Reread boot command line; echo last parameter's argument or return false.

getbootparam(){
stringinstring " $1=" "$CMDLINE" || return 1
result="${CMDLINE##*$1=}"
result="${result%%[     ]*}"
echo "$result"
return 0
}

startkiosk()
{
# playsound
GDK_USE_XFT=1 

CMDLINE=$(cat /proc/cmdline) # FIXME!

url=$(getbootparam url)

cat <<EOF > $HOME/kiosk.html
<html>
<head>
<script language="javascript">
<!--
function StartKiosk(){
window.open("$url","","fullscreen,toolbar=yes,scrollbars=yes");
timeoutID=setTimeout("CloseLauncher()", 100);
}
function CloseLauncher(){
window.close();
}
-->
</script>
</head>
<body onLoad="StartKiosk()">
</body>
</html>
EOF

echo 'user_pref("privacy.popups.first_popup", false);' >> $HOME/.mozilla/knoppix/ujixazk6.slt/prefs.js
echo 'user_pref("dom.allow_scripts_to_close_windows", true);' >> $HOME/.mozilla/knoppix/ujixazk6.slt/prefs.js
echo 'user_pref("browser.toolbars.showbutton.print", false);' >> $HOME/.mozilla/knoppix/ujixazk6.slt/prefs.js

while [ "$DESKTOP" = "kiosk" -o "$DESKTOP" = "KIOSK" ]
do
  mozilla $HOME/kiosk.html
  [ -f /etc/sysconfig/desktop ]  && . /etc/sysconfig/desktop
done
}

startrdp()
{
  CMDLINE=$(cat /proc/cmdline) # FIXME!

  rdp_host=$(getbootparam rdp_host)
  
  #start some window manager
  kwin &

  # start rdesktop
  rdesktop "$rdp_host" || xmessage "No se pudo conectar con el servidor $rdp_host."
}

startnx()
{
  CMDLINE=$(cat /proc/cmdline) # FIXME!
  
  # Create .nx config ...
  mkdir -p $HOME/.nx/config

  nx_ssl=$(getbootparam nx_ssl)

  nx_desktop=$(getbootparam nx_desktop)
  nx_link_speed=$(getbootparam nx_link_speed)
  nx_resolution=$(getbootparam nx_resolution)
  nx_server_host=$(getbootparam nx_server_host)
  nx_server_port=$(getbootparam nx_server_port)
  nx_session=$(getbootparam nx_session)
  
  nx_auth=$(getbootparam nx_auth)
  nx_password=$(getbootparam nx_password)
  nx_user=$(getbootparam nx_user)

  # FIXME for 1.4.0
  cat <<EOF > $HOME/.nx/config/termserv.conf
<!DOCTYPE KSettings>
<KSettings application="nxclient" version="1.3" >
<group name="Advanced" >
<option key="Enable SSL encryption" value="${nx_ssl:-true}" />
</group>
<group name="General" >
<option key="Desktop" value="${nx_desktop:-KDE}" />
<option key="Link speed" value="${nx_link_speed:-modem}" />
<option key="Resolution" value="${nx_resolution:-fullscreen}" />
<option key="Resolution height" value="600" />
<option key="Resolution width" value="800" />
<option key="Server host" value="${nx_server_host:-localhost}" />
<option key="Server port" value="${nx_server_port:-22}" />
<option key="Session" value="${nx_session:-Unix}" />
</group>
<group name="Login" >
<option key="Auth" value="${nx_auth}" />
<option key="Password" value="${nx_password}" />
<option key="User" value="${nx_user:-nxuser}" />
</group>
<group name="VNC Session" >
<option key="Password" value="" />
</group>
<group name="Windows Session" >
<option key="Password" value="" />
</group>
</KSettings>
EOF

  cat <<EOF > $HOME/.nx/config/nxclient.conf
<!DOCTYPE NXClientSettings>
<NXClientSettings application="nxclient" version="1.3" >
<group name="General" >
<option key="Personal NX dir" value="/home/knoppix/.nx" />
</group>
</NXClientSettings>
EOF

  #start some window manager
  kwin &

  # start nxclient and do that in an endless loop
  while true;
  do
    nxclient --session "termserv"
    sleep 2
  done
}

# Check for sufficient Real Memory for starting KDE or GNOME
# (We don't want to end in a swap-a-lot loop.)
# REALMEM="$(awk '/MemTotal/{print $2}' /proc/meminfo)"
# FREEMEM="$(awk 'BEGIN{m=0};/MemFree|Cached|SwapFree/{m+=$2};END{print m}' /proc/meminfo)"
# if [ "$REALMEM" -lt 25000 ]; then
# starttwm
# else

#Start pulseaudio as user
[ -e /etc/X11/Xsession.d/70pulseaudio ] && sh /etc/X11/Xsession.d/70pulseaudio

#GTK encoding hacks
[ -e /etc/X11/Xsession.d/60kademar-gtk_encoding ] && sh /etc/X11/Xsession.d/60kademar-gtk_encoding

#Orca Screenread Support
[ -n "`grep orca /proc/cmdline`" ] && fstartorca # ORCA support


case "$DESKTOP" in
	kde|KDE|Kde) fstartkde; ;;
	kde4|KDE4|Kde4) fstartkde4; ;;
	gnome|GNOME|Gnome) startgnome; ;;
# 	larswm|LARSWM) [ "$FREEMEM" -ge "35000" ] && startlarswm || starticewm lowmem 64; ;;
	enlightenment|ENLIGHTENMENT) startenlightenment; ;;
 	fluxbox|FLUXBOX) startfluxbox; ;;
# 	xfce|xfce3|XFCE|XFCE3) [ "$FREEMEM" -ge "35000" ] && startxfce || starttwm lowmem 64; ;;
	xfce|xfce4|XFCE4) startxfce4; ;;
	windowmaker|wmaker|WINDOWMAKER|WMAKER) startwindowmaker; ;;
	icewm|ICEWM) starticewm; ;;
	lxde|LXDE) fstartlxde; ;; #lxde support
# 	nx|NX) startnx ;;
# 	kiosk|kiosk) startkiosk ;;
# 	rdp|rdp) startrdp ;;
# 	twm|TWM) starttwm;   ;;
	*) starticewm invalidwm;   ;;
esac
# fi
