#!/bin/bash

#Creat per Burnix  -  burnix-scripts
#Modificat per Adonay Sanz - kademar-scripts

# update-grub

depmod -a

umask 022

[ -e /etc/init.d/autofs ] && /etc/init.d/autofs stop
[ -e /etc/init.d/nvidia-glx ] && /etc/init.d/nvidia-glx stop

# userdel skel
# groupdel skel

rm -fR /etc/skel/Papelera/* \
	/etc/skel/.kde/share/apps/kopete/contactlist.xml \
	/etc/skel/.aMule/muleco*

rm -fR \
        /root/.bash_history \
        /root/.bash_logout \
        /var/tmp/* \
	/tmp/* \
	/etc/skel/* \
	/etc/default/locale \
        /var/tmp/.??* \
        /home/*/.openoffice/*/.lock \
        var/cache/apt/archives/*.deb \
        var/cache/apt/archives/partial/* > /dev/null  \
        /etc/ssh/ssh ssh_host_dsa_key \
	/etc/ssh/ssh_host_rsa_key \
	/etc/ssh/ssh_host_dsa_key.pub \
	/etc/ssh/ssh_host_rsa_key.pub \
	/etc/udev/rules.d/70*persistent* \
        /tmp/.esd* \
	/var/log/*  || exit 10

for i in `ls /var/run --ignore=speech*`
do
	rm -fr /var/run/$i
done

#remove openoffice lock files
for i in /home/*
do
	if [ -d "$i/.openoffice" ]; then
	for i in $i/.openoffice/*
	do
		[ -e $i/.lock ] && rm -f $i/.lock
	done
	fi
	if [ -d "$i/.kde" ]; then
		rm -f $i/.kde/cache-* 2>/dev/null
		rm -f $i/.kde/socket-* 2>/dev/null
		rm -f $i/.kde/tmp-* 2>/dev/null
	fi
	
	#Borrem temporals
	rm -fr $i/.qt
	rm -fr $i/.subversion
	rm -fr $i/.ssh
	rm -fr $i/.mcop
	rm -fr $i/.ICEauthority
done 

###Purgem els paquets desinstalats
COLUMNS=200 dpkg -l |grep ^rc |awk '{print $2} ' | xargs dpkg -P 2> /dev/null

# remove only "temporary" or saved files in the given directories
nuke(){
for i in `find "$@" -name \*.gz -o -name \*.bz2 -o -name \*.0 2>/dev/null`; do
rm -f "$i"
done
}

# set all files in the given directories to a length of zero
zero(){
for i in `find "$@" -type f -size +0 -not -name \*.ini 2>/dev/null`; do
:> "$i"
done
}

if [ -z "$SACRED" ]; then

	#Remove only if not sacred
	rmdir /mnt/cdrom?* /mnt/hd?* 2>/dev/null

	rm -f /etc/X11/XF86Config /etc/X11/XF86Config-4 \
	      /etc/XF86Config /etc/XF86Config-4 /etc/sysconfig/* \
	      /etc/X11/xorg.conf \
	      /etc/samba/*.SID /etc/samba/*.tdb \
	      /dev/mouse* /dev/cdrom* /dev/cdwriter* \
	      /var/lib/nessus/* \
	      /etc/dhcpc/resolv* \
	      /etc/resolv.conf \
              /etc/mtab \
              /var/lib/alsa/asound.state
              /etc/network/run/ifstate \
	      2>/dev/null
	      #/etc/ssh/*key*

	rm -fR \
	/var/backups/* /home/*/.ssh
	

	#Not needed if sacred
# 	mkdir -p /etc/sysconfig/network-scripts /etc/sysconfig/provider

ln -s /proc/mounts /etc/mtab

# if [ -e /etc/dhcpc/resolv.conf -o -L /etc/dhcpc/resolv.conf ]; then
# 	rm -f /etc/dhcpc/resolv.conf
# 	rm -f /etc/resolv.conf
# 
# 	#Setup resolv conf to use local nameserver by default
# 	cat >/etc/dhcpc/resolv.conf <<EOT
# 	# insert nameservers here
# 	nameserver 127.0.0.1
# EOT
# 	chmod 644 /etc/dhcpc/resolv.conf
# 	ln -s /etc/dhcpc/resolv.conf /etc/
# else
# 	rm -f /etc/resolv.conf
# 
# 	#Setup resolv conf to use local nameserver by default
# 	cat >/etc/resolv.conf <<EOT
# 	# insert nameservers here
# 	nameserver 127.0.0.1
# EOT
# 	chmod 644 /etc/resolv.conf
# fi

ln -s /etc/resolvconf/run/resolv.conf /etc/resolv.conf

#fstab blanc
cat > /etc/fstab <<EOT
#/etc/fstab: static file system information.
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>

EOT

# if [ -d /usr/src/linux/arch/ ]; then
# 	echo -n "Removing unused architecture Kernel sources: "
# 	for i in `ls -1 /usr/src/linux/arch/ | grep -v i386`; do
# 		echo -n "$i "; rm -rf /usr/src/linux/arch/"$i" /usr/src/linux/include/asm-"$i"
# 	done
# fi

fi

rm -f \
	/var/log/ksymoops/* /var/lock/*/* /var/lock/* \
	/var/state/*/* /var/state/* /var/log/nessus/* \
	/halt /reboot /ash.static /etc/dhcpc/*.info \
	/etc/*passwd- /etc/*shadow- /etc/*group- \
	/var/ca /var/es /var/en /var/directhome /var/resolucions /var/xautoconf /var/escriptori \
	2>/dev/null


rm -fR \
	/tmp/* /var/tmp/* /.ssh /root/.ssh \
	/root/.bash_history /home/*/.bash_history \
	/etc/sysconfig \
	/var/lib/texmf/ls-R \
	/var/spool/texmf/ls-R \
	/var/cache/apt-listbugs/* \
	2>/dev/null
	

nuke /var/log /var/cache
zero /var/local /var/log /var/spool \
     /var/lib/games /var/cache/man /var/lib/wine \
     /var/lib/nfs /var/lib/xkb

# for i in `find /usr/*/man -name \*.\[0-9ln\]` ; do
# [ -f "$i".gz -o -f "$i".bz2 ] && rm -f "$i"
# done

#Creacio fitxers necessaris
touch /var/log/dmesg

for i in alsa cups dbus hal hplip samba sshd sudo xauth
do
	mkdir -p /var/run/$i
done

#Carpetes necessaries
for i in news cups fsck ksymoops iptraf
do
	mkdir -p /var/log/$i
done

#Fitxers necessaris
for i in dmesg syslog messages
do
	touch /var/log/$i
done

#Remove persistent Udev Rules, based on pc where created live-cd
rm -f /etc/udev/rules.d/z25_persistent-net.rules
rm -f /etc/udev/rules.d/z25_persistent-cd.rules

#remove old Initrd
rm -f /boot/initrd*

# delete old dowloaded packages
apt-get clean

# Recreate empty utmp and wtmp
:>/var/run/utmp
:>/var/run/wtmp
# regenerate module dependencies and ls.so.cache
echo -n "Updating ld.so.cache..."
ldconfig
echo "	Done."
echo -n "Updating modules.dep..."
depmod -a 2>/dev/null
echo "	Done."
# echo -n "Updating texhash..."
# mktexlsr
# echo "	Done."
# echo -n "Updating mandb..."
# mandb -c
# man doesnotexist >/dev/null 2>&1
# echo "	Done."
# echo -n "Updating menus..."
# [  -x /usr/sbin/mkmenusfromkde ] && /usr/sbin/mkmenusfromkde
# echo "	Done."
echo -n "Updating locate-database..."
updatedb
echo "	Done."

echo -n "Fixing permissions in /dev/..."
chown root.root /dev/ttyp*
chmod 666 /dev/ttyp* /dev/sg*
echo "  Done".

mkdir -p /var/log/apt

if [ -n "`dpkg -l | grep -i  linux-headers`" ]; then
	echo "There are Linux Headers installed on your system. Are occupying 60mb aprox. Check if you don't want on your live-cd system"
fi

#Check integrity of GLX
if [ -L "/usr/lib/xorg/modules/extensions/libglx.so"  ]; then
	echo "/usr/lib/xorg/modules/extensions/libglx.so  IS a Link. Check  xserver-xorg-core package if you don't want this way."
fi
if [ ! -e "/usr/lib/libGL.so.1.2"  ]; then
	echo "/usr/lib/libGL.so.1.2 does NOT exists. Check or reinstall  libgl1-mesa-dri / glx package if you don't want this way."
fi
