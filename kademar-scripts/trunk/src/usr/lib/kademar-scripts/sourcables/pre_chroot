##############################################################################
# PREPARACIÓ DEL SISTEMA DE FITXERS DEL LIVE-CD PER SER MODIFICAT AMB CHROOT #
##############################################################################

#Si hem activat el mode Debug, que apareixin tots els missatges del que s'està fent
#debug set -x

cd $BURNIX_ROOT || exit 3
#Copia una versio generica de les X per 1024 (per SPLASHY)
[ -e $BURNIX_ROOT/etc/X11/xorg.conf ] && rm -f $BURNIX_ROOT/etc/X11/xorg.conf
[ -e $BURNIX_ROOT/etc/X11/XF86Config-4 ] && rm -f $BURNIX_ROOT/etc/X11/XF86Config-4
[ -e $BURNIX_ROOT/etc/X11/ ] && cp /usr/lib/kademar-scripts/sourcables/xorg.conf_1024x768 $BURNIX_ROOT/etc/X11/xorg.conf
[ -e $BURNIX_ROOT/etc/X11/ ] && cp /usr/lib/kademar-scripts/sourcables/XF86Config-4_1024x768 $BURNIX_ROOT/etc/X11/XF86Config-4

#vi root/todo || exit 2

#mount apt/archives in order to be the same folder and not duplicate hard disk space
mount --bind /var/cache/apt/archives/ var/cache/apt/archives || exit 4 

#Mount /sys folder
mount -t sysfs sys sys

#copy apt/lists of base system, not to do re-update if you have been done
cp -af /var/lib/apt/lists/* var/lib/apt/lists || exit 15

touch $BURNIX_ROOT/etc/init.d/.legacy-bootordering

[ ! -e common ] && mkdir common
mount --bind $COMMON_DIR common
#cp -rl $COMMON_DIR/* common || exit 11

#mount 192.168.1.5:/var/cache/apt/archives var/cache/apt/archives || exit 4

###Copiem pq sino cuan s'actualitzen serveis no podem desmuntar el sistema de fitxers...
#mount --bind /dev dev || exit 5 
###cp -a /dev/* dev/
mv dev dev.old
mkdir dev
cp -a /dev/* dev/

#TODO# trovar el parametre que s'ha de fer servir en el moment de actualitzar serveis per que no s'engeguin.
#TODO# (o encara millor, muntar el tema del uml)

[ ! -e proc ] && mkdir proc
[ ! -e sys ] && mkdir sys
[ ! -e dev ] && mkdir dev

mount --bind /proc proc || exit 1

#If the hostame is specified in the profile write it.
if [ ! -z "$LIVECD_HOST_NAME" ]; then
	echo -n "Setting profile hostname in live-cd system..."
	echo $LIVECD_HOST_NAME > $BURNIX_ROOT/etc/hostname
	echo "Done"
fi

#Si no te el fitxer /etc/hostname i te el nom definit el el profile, el crea
if [ ! -e $BURNIX_ROOT/etc/hostname ]; then
	[ ! -z "$HOSTNAME" ] && echo $HOSTNAME > $BURNIX_ROOT/etc/hostname
fi

#Comprovació i avís si els hostnames són iguals, per tal de poder-los canviar
HOST_LIVECD=`cat $BURNIX_ROOT/etc/hostname`
HOST_LOCAL=`cat /etc/hostname`
[ $HOST_LOCAL = $HOST_LIVECD ] && warn "Live-CD hostname and Host hostname are the same, if you don't want it that way, check on /etc/hosts and /etc/hostname files"  && echo ''

#Check if /etc/hosts file exists in live-cd filesystem. If it doesn't exists; or doesn't contain live-cd localhost information, we create a generic one, with this information.
check_hosts=`cat $BURNIX_ROOT/etc/hosts | grep "127.0.0.1" | egrep $LIVECD_HOST_NAME | egrep localhost`
if [ ! -e $BURNIX_ROOT/etc/hosts -o -z "$check_hosts" ]; then 
echo "127.0.0.1 $LIVECD_HOST_NAME localhost" > $BURNIX_ROOT/etc/hosts
cat >> $BURNIX_ROOT/etc/hosts << "EOF"

# The following lines are desirable for IPv6 capable hosts
# (added automatically by netbase upgrade)

::1    ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
EOF
fi

# Rename /etc/hosts of live-cd and we use /etc/hosts file, from Host machine, in order to not recibe possible error messages. After, we'll return the original file
mv $BURNIX_ROOT/etc/hosts $BURNIX_ROOT/etc/hosts.bak
cp /etc/hosts $BURNIX_ROOT/etc/hosts

#Fstab - Pirula
mv $BURNIX_ROOT/etc/fstab $BURNIX_ROOT/etc/fstab.bak
cp /etc/fstab $BURNIX_ROOT/etc/fstab

#Check if there's a user
USUARI=`ls $BURNIX_ROOT/home --ignore=ANONYMOUS 2>/dev/null`
[ -z "$USUARI" ] && warn "You don't have created any user, we recommend create one at least. Suggested username is 'kademar'" && echo ''
[ ! -e $BURNIX_ROOT/sbin/hotplug -a ! -e $BURNIX_ROOT/etc/init.d/udev ] && warn "You don't have installed HOTPLUG/UDEV package. You will lose some features if you don't install it." && echo ''

#Si no hi ha cap sources list en el live-cd el copiem de l'amfitrió
[ -e /etc/apt/sources.list -a ! -e $BURNIX_ROOT/etc/apt/sources.list ] && cp /etc/apt/sources.list $BURNIX_ROOT/etc/apt && echo "${BLUE}Creating initial /etc/apt/sources.list from host system${NORMAL}"


#Si el sistema amfitrió té unes sources.list, és una debian/ubuntu i similars; per tant el live-cd creat, també utilitzarà les sources.list
if [ -e /etc/apt/sources.list -a "$USE_SOURCES_FROM_HOST" = yes ]; then
	echo "${BLUE}Copying sources.list from host to guest${NORMAL}"
	#Si el sistema de fitxers de la live-cd no té sources.list utilitzarem les del sistema anfitrió
	[ -e etc/apt/sources.list ]  && mv etc/apt/sources.list etc/apt/sources.list.bak
	cp /etc/apt/sources.list etc/apt
# 	cp etc/apt/sources.list etc/apt/sources.list.bak.2
	[ -f $COMMON_DIR/sources.list ] && \
		cat  $COMMON_DIR/sources.list | \
		grep -v ^"deb file" >  etc/apt/sources.list
# 	rm -f etc/apt/sources.list.bak.2
else
	echo "${YELLOW}NOT ${BLUE}Copying sources.list from host to guest${NORMAL}"
fi

if [ -n "$APT_CACHER_URL" ]; then
	echo "${BLUE}adding $APT_CACHER_URL:3142/ to sources.list entries${NORMAL}"
	sed -i "s,http://,&$APT_CACHER_URL:3142/,g" $BURNIX_ROOT/etc/apt/sources.list
#else
#	echo "${YELLOW}NOT adding $APT_CACHER_URL:3142/ to sources.list entries${NORMAL}"
fi

#Si el sistema amfitrió té /etc/resolv.conf, utilitzarem el actual, així no s'haurà de configurar internet
if [ -e /etc/resolv.conf ]; then
	[ -h $BURNIX_ROOT/etc/resolv.conf ] && mv $BURNIX_ROOT/etc/resolv.conf $BURNIX_ROOT/etc/resolv.conf.bak
	cp /etc/resolv.conf etc/
fi

#Si el sistema live-cd no te el fitxer /etc/shadow, agafa el de /usr/lib/kademar-scripts/includes/initrd/etc/shadow 
[ ! -e $BURNIX_ROOT/etc/shadow ] && cp /usr/lib/kademar-scripts/includes/initrd/etc/shadow $BURNIX_ROOT/etc

## /etc/apt/apt.conf creation of live-cd filesystem
#if [ ! -e $BURNIX_ROOT/etc/apt/apt.conf ]; then
#	case "$DIST" in
#	sid|experimental|unstable)
#	APT_RELEASE="experimental"
#	;;
#	lenny|testing)
#	APT_RELEASE="testing"
#	;;
#	woody|sarge|etch|stable)
#	APT_RELEASE="stable"
#	;;
#	esac
#	cat > $BURNIX_ROOT/etc/apt/apt.conf << EOF
#APT::Default-Release "$APT_RELEASE";
#APT::Cache-Limit 10000000;
#EOF
#fi

# /etc/network/interfaces file creation if loopback interface, isn't found
eth_lo=`cat $BURNIX_ROOT/etc/network/interfaces | grep "iface lo"`
if [ -z "$eth_lo" ]; then
cat > $BURNIX_ROOT/etc/network/interfaces << "EOF"

# Used by ifup(8) and ifdown(8). See the interfaces(5) manpage or
# /usr/share/doc/ifupdown/examples for more information.

auto lo
iface lo inet loopback

EOF
fi


#Check if desktops are installed (if not, will fail on live-cd start with no reason)
if [ -e /usr/kademar/config-livecd ]; then
	. /usr/kademar/config-livecd  #load config
	for i in $desktop_min $desktop_max
	do
		[ -n "`which $i`" -a -n "`which start$i`" ] && warn "Make sure that $i Desktop it's installed"
	done
fi
