post_install() {
    echo "Replacing Kademar files for Heliox livecd start"
    if [ -e "/usr/share/kademar/heliox-livecd-files/" ]; then
      cp -af /usr/share/kademar/heliox-livecd-files/* /      
    fi
    create_skel
    systemdlinks
}

post_upgrade() {
    if [ -e "/usr/share/kademar/heliox-livecd-files/" ]; then
	echo "Updating files for Heliox livecd start"
	cp -af /usr/share/kademar/heliox-livecd-files/* /    
    fi
  create_skel
  systemdlinks
}

post_remove() {
    if [ -e "/usr/share/kademar/livecd-recover/" ]; then
      echo "Recovering files modified for livecd"
      cp -af /usr/share/kademar/livecd-recover/* /
    fi
}

systemdlinks() {
    if [ ! -L '/etc/systemd/system/multi-user.target.wants/speech-dispatcherd.service' ]; then
        ln -s '/usr/lib/systemd/system/speech-dispatcherd.service' '/etc/systemd/system/multi-user.target.wants/speech-dispatcherd.service'
    fi
    if [ ! -L '/etc/systemd/system/multi-user.target.wants/kademar-festival.service' ]; then
        ln -s '/usr/lib/systemd/system/kademar-festival.service' '/etc/systemd/system/multi-user.target.wants/kademar-festival.service'
    fi
}




create_skel() {
  rm -fr /etc/skel/.??*
  rm -fr /etc/skel/*
  [ -n "`ls /usr/share/kademar/skel/.??* 2>/dev/null`" ] && cp -a /usr/share/kademar/skel/.??* /etc/skel
  [ -n "`ls /usr/share/kademar/skel/* 2>/dev/null`" ] && cp -a /usr/share/kademar/skel/* /etc/skel
  use_gtk_oxygen_theme
  if [ -e /etc/kademar/config-livecd ]; then
    . /etc/kademar/config-livecd
      if [ -n "$user" -a -e "/home/$user" ]; then
	echo "Updating LiveCD Home files"
	rm -fr /home/$user/.??*
	rm -fr /home/$user/*
	[ -n "`ls /etc/skel/.??* 2>/dev/null`" ] && cp -a /etc/skel/.??* /home/$user/
	[ -n "`ls /etc/skel/* 2>/dev/null`" ] && cp -a /etc/skel/* /home/$user/
	[ -n "`ls /etc/skel/.kde4/Autostart/* 2>/dev/null`" ] && chmod +x /etc/skel/.kde4/Autostart/*
	[ -n "`ls /etc/skel/.kde3/Autostart/* 2>/dev/null`" ] && chmod +x /etc/skel/.kde3/Autostart/*
	
	[ -n "`ls /home/$user/* 2>/dev/null`" ] && chown $user:users /home/$user/* -R
	[ -n "`ls /home/$user/.??* 2>/dev/null`" ] && chown $user:users /home/$user/.??* -R
	[ -n "`ls /home/$user/.kde4/Autostart/* 2>/dev/null`" ] && chmod +x /home/$user/.kde4/Autostart/*
	[ -n "`ls /home/$user/.kde3/Autostart/* 2>/dev/null`" ] && chmod +x /home/$user/.kde3/Autostart/*
      fi
      rm -fr /root/.??*
      rm -fr /root/*
	[ -n "`ls /etc/skel/.??* 2>/dev/null`" ] && cp -a /etc/skel/.??* /root
	[ -n "`ls /etc/skel/* 2>/dev/null`" ] && cp -a /etc/skel/* /root
	[ -n "`ls /root/* 2>/dev/null`" ] && chown root:root /root/* -R
	[ -n "`ls /root/.??* 2>/dev/null`" ] && chown root:root /root/.??* -R

	echo "Restoring QT Theme for root"
	sed "s~style=.*~style=Plastique~g" -i /root/.config/Trolltech.conf
  fi
}

use_gtk_oxygen_theme() {
  if [ -n "`pacman -Qs | grep -i 'local/oxygen-gtk2'`" -a -e "/etc/skel/.gtkrc-2.0" ]; then
    echo "Setting oxygen-gtk2 theme"
    sed s.Adwaita.oxygen-gtk.g -i /etc/skel/.gtkrc-2.0
  fi
  if [ -n "`pacman -Qs | grep -i 'local/oxygen-gtk3'`" -a -e "/etc/skel/.config/gtk-3.0/settings.ini" ]; then
    echo "Setting oxygen-gtk3 theme"
    sed s.Adwaita.oxygen-gtk.g -i "/etc/skel/.config/gtk-3.0/settings.ini"
  fi

}